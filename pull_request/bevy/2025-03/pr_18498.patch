diff --git a/crates/bevy_math/clippy.toml b/crates/bevy_math/clippy.toml
index 0fb122e4dcef6..c1f67e044d8ec 100644
--- a/crates/bevy_math/clippy.toml
+++ b/crates/bevy_math/clippy.toml
@@ -34,5 +34,6 @@ disallowed-methods = [
   { path = "f32::copysign", reason = "use ops::copysign instead for no_std compatibility" },
   { path = "f32::round", reason = "use ops::round instead for no_std compatibility" },
   { path = "f32::floor", reason = "use ops::floor instead for no_std compatibility" },
+  { path = "f32::ceil", reason = "use ops::ceil instead for no_std compatibility" },
   { path = "f32::fract", reason = "use ops::fract instead for no_std compatibility" },
 ]
diff --git a/crates/bevy_math/src/ops.rs b/crates/bevy_math/src/ops.rs
index e9d27ac54a83a..6d39bbbfd45fc 100644
--- a/crates/bevy_math/src/ops.rs
+++ b/crates/bevy_math/src/ops.rs
@@ -510,6 +510,14 @@ mod libm_ops_for_no_std {
         libm::floorf(x)
     }
 
+    /// Returns the smallest integer greater than or equal to `x`.
+    ///
+    /// Precision is specified when the `libm` feature is enabled.
+    #[inline(always)]
+    pub fn ceil(x: f32) -> f32 {
+        libm::ceilf(x)
+    }
+
     /// Returns the fractional part of `x`.
     ///
     /// This function always returns the precise result.
@@ -581,6 +589,14 @@ mod std_ops_for_no_std {
         f32::floor(x)
     }
 
+    /// Returns the smallest integer greater than or equal to `x`.
+    ///
+    /// This function always returns the precise result.
+    #[inline(always)]
+    pub fn ceil(x: f32) -> f32 {
+        f32::ceil(x)
+    }
+
     /// Returns the fractional part of `x`.
     ///
     /// This function always returns the precise result.
