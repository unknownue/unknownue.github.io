diff --git a/release-content/release-notes/automatic_scrollbar_space_allocation.md b/release-content/release-notes/automatic_scrollbar_space_allocation.md
deleted file mode 100644
index 9430281a1b130..0000000000000
--- a/release-content/release-notes/automatic_scrollbar_space_allocation.md
+++ /dev/null
@@ -1,7 +0,0 @@
----
-title: Automatically allocate space for scrollbars
-authors: ["@ickshonpe"]
-pull_requests: [20093]
----
-
-`Node` has a new field `scrollbar_width`. If `OverflowAxis::Scroll` is set for a UI Node's axis, a space for a scrollbars of width `scrollbar_width` will automatically be left in the layout.
diff --git a/release-content/release-notes/faster-zstd-option.md b/release-content/release-notes/faster-zstd-option.md
deleted file mode 100644
index 01c4bc98c3e2f..0000000000000
--- a/release-content/release-notes/faster-zstd-option.md
+++ /dev/null
@@ -1,27 +0,0 @@
----
-title: Faster Zstd decompression option
-authors: ["@atlv24", "@brianreavis"]
-pull_requests: [19793]
----
-
-There is now an option to use the [zstd](https://crates.io/crates/zstd) c-bindings instead of [ruzstd](https://crates.io/crates/ruzstd).
-This is less safe and portable, but can be around 44% faster.
-
-The two features that control which one is used are `zstd_rust` and `zstd_c`.
-`zstd_rust` is enabled by default, but `zstd_c` takes precedence if both are enabled.
-
-To enable it, add the feature to the `bevy` entry of your Cargo.toml:
-
-```toml
-bevy = { version = "0.17.0", features = ["zstd_c"] }
-```
-
-Note: this will still include a dependency on `ruzstd`, because mutually exclusive features are not supported by Cargo.
-To remove this dependency, disable default-features, and manually enable any default features you need:
-
-```toml
-bevy = { version = "0.17.0", default-features = false, features = [
-    "zstd_c",
-    "bevy_render", # etc..
-] }
-```
diff --git a/release-content/release-notes/log-diagnostics-state-public.md b/release-content/release-notes/log-diagnostics-state-public.md
deleted file mode 100644
index 4e05ed4202835..0000000000000
--- a/release-content/release-notes/log-diagnostics-state-public.md
+++ /dev/null
@@ -1,8 +0,0 @@
----
-title: LogDiagnosticsState is now public
-authors: ["@hukasu"]
-pull_requests: [19323]
----
-
-Make `LogDiagnosticsState` public to allow editing its duration and filters during
-runtime.
diff --git a/release-content/release-notes/text-background-colors.md b/release-content/release-notes/text-background-colors.md
deleted file mode 100644
index 93cbdfdf01448..0000000000000
--- a/release-content/release-notes/text-background-colors.md
+++ /dev/null
@@ -1,7 +0,0 @@
----
-title: Text Background Colors
-authors: ["@Ickshonpe"]
-pull_requests: [18892]
----
-
-UI Text now supports background colors. Insert the `TextBackgroundColor` component on a UI `Text` or `TextSpan` entity to set a background color for its text section.
diff --git a/release-content/release-notes/text2d_shadows.md b/release-content/release-notes/text2d_shadows.md
index f34c054735a61..9d29a7c5f0758 100644
--- a/release-content/release-notes/text2d_shadows.md
+++ b/release-content/release-notes/text2d_shadows.md
@@ -1,7 +1,12 @@
 ---
-title: Text2d Shadows
-authors: ["@Ickshonpe"]
+title: "`Text2d` Shadows"
+authors: ["@ickshonpe"]
 pull_requests: [20463]
 ---
 
-`Text2d` now supports shadows. Add the `Text2dShadow` component to a `Text2d` entity to draw a shadow beneath its text.
+TODO: add showcase image(s)
+
+`Text2d` is a simple worldspace text API: great for damage numbers and simple labels.
+It deserves a few bells and whistles though, so it can keep up with its UI brother, `Text`.
+
+In addition to the new text background color, we've added dropshadows for `Text2d`. Add the `Text2dShadow` component to a `Text2d` entity to draw a shadow effect beneath its text.
diff --git a/release-content/release-notes/text2d_textbackgroundcolor.md b/release-content/release-notes/text2d_textbackgroundcolor.md
deleted file mode 100644
index 753620dfa97a0..0000000000000
--- a/release-content/release-notes/text2d_textbackgroundcolor.md
+++ /dev/null
@@ -1,9 +0,0 @@
----
-title: `TextBackgroundColor` support for `Text2d`
-authors: ["@ickshonpe"]
-pull_requests: [20464]
----
-
-`Text2d` now supports the `TextBackgroundColor` component.
-
-Add a `TextBackgroundColor` to `Text2d` entity or its child `TextSection` entities to draw a background color for that section of text.
diff --git a/release-content/release-notes/text_background_colors.md b/release-content/release-notes/text_background_colors.md
new file mode 100644
index 0000000000000..abeb423195fdc
--- /dev/null
+++ b/release-content/release-notes/text_background_colors.md
@@ -0,0 +1,11 @@
+---
+title: "Text Background Colors"
+authors: ["@ickshonpe"]
+pull_requests: [18892, 20464]
+---
+
+TODO: add showcase image(s)
+
+Text in Bevy now supports background colors. Insert the `TextBackgroundColor` component on a UI `Text` or `TextSpan` entity to set a background color for its text section.
+
+This also works with `Text2d`: perfect for worldspace tooltips.
