diff --git a/examples/2d/custom_gltf_vertex_attribute.rs b/examples/2d/custom_gltf_vertex_attribute.rs
index fa723a6067d0e..58d97dfe2a60a 100644
--- a/examples/2d/custom_gltf_vertex_attribute.rs
+++ b/examples/2d/custom_gltf_vertex_attribute.rs
@@ -6,6 +6,7 @@ use bevy::{
     prelude::*,
     reflect::TypePath,
     render::render_resource::*,
+    shader::ShaderRef,
     sprite::{Material2d, Material2dKey, Material2dPlugin},
 };
 
diff --git a/examples/3d/clustered_decals.rs b/examples/3d/clustered_decals.rs
index 7408c017d1a67..4f1c1b63674e0 100644
--- a/examples/3d/clustered_decals.rs
+++ b/examples/3d/clustered_decals.rs
@@ -10,9 +10,10 @@ use bevy::{
     pbr::{decal, ExtendedMaterial, MaterialExtension},
     prelude::*,
     render::{
-        render_resource::{AsBindGroup, ShaderRef},
+        render_resource::AsBindGroup,
         renderer::{RenderAdapter, RenderDevice},
     },
+    shader::ShaderRef,
     window::{CursorIcon, SystemCursorIcon},
 };
 use ops::{acos, cos, sin};
diff --git a/examples/3d/irradiance_volumes.rs b/examples/3d/irradiance_volumes.rs
index e0e3eb0906400..00da6a3fdef82 100644
--- a/examples/3d/irradiance_volumes.rs
+++ b/examples/3d/irradiance_volumes.rs
@@ -20,7 +20,8 @@ use bevy::{
     math::{uvec3, vec3},
     pbr::{ExtendedMaterial, MaterialExtension},
     prelude::*,
-    render::render_resource::{AsBindGroup, ShaderRef, ShaderType},
+    render::render_resource::{AsBindGroup, ShaderType},
+    shader::ShaderRef,
     window::PrimaryWindow,
 };
 
diff --git a/examples/3d/lines.rs b/examples/3d/lines.rs
index 2670ae549a514..64d09b710e17d 100644
--- a/examples/3d/lines.rs
+++ b/examples/3d/lines.rs
@@ -8,10 +8,10 @@ use bevy::{
     render::{
         render_asset::RenderAssetUsages,
         render_resource::{
-            AsBindGroup, PolygonMode, RenderPipelineDescriptor, ShaderRef,
-            SpecializedMeshPipelineError,
+            AsBindGroup, PolygonMode, RenderPipelineDescriptor, SpecializedMeshPipelineError,
         },
     },
+    shader::ShaderRef,
 };
 
 /// This example uses a shader source file from the assets subdirectory
diff --git a/examples/3d/solari.rs b/examples/3d/solari.rs
index e61c6e39e6dd9..57a9ddd4ac517 100644
--- a/examples/3d/solari.rs
+++ b/examples/3d/solari.rs
@@ -6,8 +6,9 @@ mod camera_controller;
 use argh::FromArgs;
 use bevy::{
     camera::CameraMainTextureUsages,
+    mesh::Indices,
     prelude::*,
-    render::{mesh::Indices, render_resource::TextureUsages},
+    render::render_resource::TextureUsages,
     scene::SceneInstanceReady,
     solari::{
         pathtracer::{Pathtracer, PathtracingPlugin},
diff --git a/examples/3d/ssr.rs b/examples/3d/ssr.rs
index 9deb9ee2c2eed..0d0c2c561516a 100644
--- a/examples/3d/ssr.rs
+++ b/examples/3d/ssr.rs
@@ -17,9 +17,10 @@ use bevy::{
     },
     prelude::*,
     render::{
-        render_resource::{AsBindGroup, ShaderRef, ShaderType},
+        render_resource::{AsBindGroup, ShaderType},
         view::Hdr,
     },
+    shader::ShaderRef,
 };
 
 /// This example uses a shader source file from the assets subdirectory
diff --git a/examples/3d/tonemapping.rs b/examples/3d/tonemapping.rs
index 093ca84e495ab..d30685ea80729 100644
--- a/examples/3d/tonemapping.rs
+++ b/examples/3d/tonemapping.rs
@@ -8,9 +8,10 @@ use bevy::{
     prelude::*,
     reflect::TypePath,
     render::{
-        render_resource::{AsBindGroup, ShaderRef},
+        render_resource::AsBindGroup,
         view::{ColorGrading, ColorGradingGlobal, ColorGradingSection, Hdr},
     },
+    shader::ShaderRef,
 };
 use std::f32::consts::PI;
 
diff --git a/examples/shader/animate_shader.rs b/examples/shader/animate_shader.rs
index f85c01f7eb56d..16377f1046f41 100644
--- a/examples/shader/animate_shader.rs
+++ b/examples/shader/animate_shader.rs
@@ -2,9 +2,7 @@
 //! The time data is in the globals binding which is part of the `mesh_view_bindings` shader import.
 
 use bevy::{
-    prelude::*,
-    reflect::TypePath,
-    render::render_resource::{AsBindGroup, ShaderRef},
+    prelude::*, reflect::TypePath, render::render_resource::AsBindGroup, shader::ShaderRef,
 };
 
 /// This example uses a shader source file from the assets subdirectory
diff --git a/examples/shader/array_texture.rs b/examples/shader/array_texture.rs
index 1d156c66e417e..3897d2dca7c36 100644
--- a/examples/shader/array_texture.rs
+++ b/examples/shader/array_texture.rs
@@ -2,9 +2,7 @@
 //! uniform variable.
 
 use bevy::{
-    prelude::*,
-    reflect::TypePath,
-    render::render_resource::{AsBindGroup, ShaderRef},
+    prelude::*, reflect::TypePath, render::render_resource::AsBindGroup, shader::ShaderRef,
 };
 
 /// This example uses a shader source file from the assets subdirectory
diff --git a/examples/shader/automatic_instancing.rs b/examples/shader/automatic_instancing.rs
index 81de7858c1ba1..e0e169641493a 100644
--- a/examples/shader/automatic_instancing.rs
+++ b/examples/shader/automatic_instancing.rs
@@ -3,10 +3,8 @@
 //! Also demonstrates how to use `MeshTag` to use external data in a custom material.
 
 use bevy::{
-    mesh::MeshTag,
-    prelude::*,
-    reflect::TypePath,
-    render::render_resource::{AsBindGroup, ShaderRef},
+    mesh::MeshTag, prelude::*, reflect::TypePath, render::render_resource::AsBindGroup,
+    shader::ShaderRef,
 };
 
 const SHADER_ASSET_PATH: &str = "shaders/automatic_instancing.wgsl";
diff --git a/examples/shader/compute_shader_game_of_life.rs b/examples/shader/compute_shader_game_of_life.rs
index a11767f06ff0d..b8a548d366497 100644
--- a/examples/shader/compute_shader_game_of_life.rs
+++ b/examples/shader/compute_shader_game_of_life.rs
@@ -14,6 +14,7 @@ use bevy::{
         texture::GpuImage,
         Render, RenderApp, RenderStartup, RenderSystems,
     },
+    shader::PipelineCacheError,
 };
 use std::borrow::Cow;
 
diff --git a/examples/shader/extended_material.rs b/examples/shader/extended_material.rs
index 7253d22949999..0c6011f976367 100644
--- a/examples/shader/extended_material.rs
+++ b/examples/shader/extended_material.rs
@@ -5,6 +5,7 @@ use bevy::{
     pbr::{ExtendedMaterial, MaterialExtension, OpaqueRendererMethod},
     prelude::*,
     render::render_resource::*,
+    shader::ShaderRef,
 };
 
 /// This example uses a shader source file from the assets subdirectory
diff --git a/examples/shader/extended_material_bindless.rs b/examples/shader/extended_material_bindless.rs
index 3b678dc19e065..0a17803272b5d 100644
--- a/examples/shader/extended_material_bindless.rs
+++ b/examples/shader/extended_material_bindless.rs
@@ -7,7 +7,8 @@ use bevy::{
     mesh::{SphereKind, SphereMeshBuilder},
     pbr::{ExtendedMaterial, MaterialExtension, MeshMaterial3d},
     prelude::*,
-    render::render_resource::{AsBindGroup, ShaderRef, ShaderType},
+    render::render_resource::{AsBindGroup, ShaderType},
+    shader::ShaderRef,
     utils::default,
 };
 
diff --git a/examples/shader/fallback_image.rs b/examples/shader/fallback_image.rs
index 7f7dc764eaefa..85a57abc8f40f 100644
--- a/examples/shader/fallback_image.rs
+++ b/examples/shader/fallback_image.rs
@@ -6,9 +6,7 @@
 //! only tests that the images are initialized and bound so that the app does
 //! not panic.
 use bevy::{
-    prelude::*,
-    reflect::TypePath,
-    render::render_resource::{AsBindGroup, ShaderRef},
+    prelude::*, reflect::TypePath, render::render_resource::AsBindGroup, shader::ShaderRef,
 };
 
 /// This example uses a shader source file from the assets subdirectory
diff --git a/examples/shader/shader_defs.rs b/examples/shader/shader_defs.rs
index 21788496cff91..5d256c29284fa 100644
--- a/examples/shader/shader_defs.rs
+++ b/examples/shader/shader_defs.rs
@@ -6,8 +6,9 @@ use bevy::{
     prelude::*,
     reflect::TypePath,
     render::render_resource::{
-        AsBindGroup, RenderPipelineDescriptor, ShaderRef, SpecializedMeshPipelineError,
+        AsBindGroup, RenderPipelineDescriptor, SpecializedMeshPipelineError,
     },
+    shader::ShaderRef,
 };
 
 /// This example uses a shader source file from the assets subdirectory
diff --git a/examples/shader/shader_material.rs b/examples/shader/shader_material.rs
index 780035e1c7e7d..2eb9e93e23eb4 100644
--- a/examples/shader/shader_material.rs
+++ b/examples/shader/shader_material.rs
@@ -1,9 +1,7 @@
 //! A shader and a material that uses it.
 
 use bevy::{
-    prelude::*,
-    reflect::TypePath,
-    render::render_resource::{AsBindGroup, ShaderRef},
+    prelude::*, reflect::TypePath, render::render_resource::AsBindGroup, shader::ShaderRef,
 };
 
 /// This example uses a shader source file from the assets subdirectory
diff --git a/examples/shader/shader_material_2d.rs b/examples/shader/shader_material_2d.rs
index ce092edd1191d..56e36fdb8cbbb 100644
--- a/examples/shader/shader_material_2d.rs
+++ b/examples/shader/shader_material_2d.rs
@@ -3,7 +3,8 @@
 use bevy::{
     prelude::*,
     reflect::TypePath,
-    render::render_resource::{AsBindGroup, ShaderRef},
+    render::render_resource::AsBindGroup,
+    shader::ShaderRef,
     sprite::{AlphaMode2d, Material2d, Material2dPlugin},
 };
 
diff --git a/examples/shader/shader_material_bindless.rs b/examples/shader/shader_material_bindless.rs
index 7e6ff32af8494..c9ae49e35b839 100644
--- a/examples/shader/shader_material_bindless.rs
+++ b/examples/shader/shader_material_bindless.rs
@@ -1,7 +1,8 @@
 //! A material that uses bindless textures.
 
 use bevy::prelude::*;
-use bevy::render::render_resource::{AsBindGroup, ShaderRef, ShaderType};
+use bevy::render::render_resource::{AsBindGroup, ShaderType};
+use bevy::shader::ShaderRef;
 
 const SHADER_ASSET_PATH: &str = "shaders/bindless_material.wgsl";
 
diff --git a/examples/shader/shader_material_glsl.rs b/examples/shader/shader_material_glsl.rs
index 790f6637dad3f..d5c3512b5e826 100644
--- a/examples/shader/shader_material_glsl.rs
+++ b/examples/shader/shader_material_glsl.rs
@@ -1,9 +1,7 @@
 //! A shader that uses the GLSL shading language.
 
 use bevy::{
-    prelude::*,
-    reflect::TypePath,
-    render::render_resource::{AsBindGroup, ShaderRef},
+    prelude::*, reflect::TypePath, render::render_resource::AsBindGroup, shader::ShaderRef,
 };
 
 /// This example uses shader source files from the assets subdirectory
diff --git a/examples/shader/shader_material_screenspace_texture.rs b/examples/shader/shader_material_screenspace_texture.rs
index 1d87fef6fdff8..2b439f7347e7e 100644
--- a/examples/shader/shader_material_screenspace_texture.rs
+++ b/examples/shader/shader_material_screenspace_texture.rs
@@ -1,9 +1,7 @@
 //! A shader that samples a texture with view-independent UV coordinates.
 
 use bevy::{
-    prelude::*,
-    reflect::TypePath,
-    render::render_resource::{AsBindGroup, ShaderRef},
+    prelude::*, reflect::TypePath, render::render_resource::AsBindGroup, shader::ShaderRef,
 };
 
 /// This example uses a shader source file from the assets subdirectory
diff --git a/examples/shader/shader_material_wesl.rs b/examples/shader/shader_material_wesl.rs
index c6db6175424de..33920c28711b2 100644
--- a/examples/shader/shader_material_wesl.rs
+++ b/examples/shader/shader_material_wesl.rs
@@ -1,16 +1,14 @@
 //! A shader that uses the WESL shading language.
 
 use bevy::{
+    mesh::MeshVertexBufferLayoutRef,
     pbr::{MaterialPipeline, MaterialPipelineKey},
     prelude::*,
     reflect::TypePath,
-    render::{
-        mesh::MeshVertexBufferLayoutRef,
-        render_resource::{
-            AsBindGroup, RenderPipelineDescriptor, ShaderDefVal, ShaderRef,
-            SpecializedMeshPipelineError,
-        },
+    render::render_resource::{
+        AsBindGroup, RenderPipelineDescriptor, SpecializedMeshPipelineError,
     },
+    shader::{ShaderDefVal, ShaderRef},
 };
 
 /// This example uses shader source files from the assets subdirectory
diff --git a/examples/shader/shader_prepass.rs b/examples/shader/shader_prepass.rs
index 7547df607684b..e44715dd713e0 100644
--- a/examples/shader/shader_prepass.rs
+++ b/examples/shader/shader_prepass.rs
@@ -8,7 +8,8 @@ use bevy::{
     pbr::PbrPlugin,
     prelude::*,
     reflect::TypePath,
-    render::render_resource::{AsBindGroup, ShaderRef, ShaderType},
+    render::render_resource::{AsBindGroup, ShaderType},
+    shader::ShaderRef,
 };
 
 /// This example uses a shader source file from the assets subdirectory
diff --git a/examples/shader/storage_buffer.rs b/examples/shader/storage_buffer.rs
index 347c70dd1ee61..fc274792dbdf5 100644
--- a/examples/shader/storage_buffer.rs
+++ b/examples/shader/storage_buffer.rs
@@ -3,10 +3,8 @@ use bevy::{
     mesh::MeshTag,
     prelude::*,
     reflect::TypePath,
-    render::{
-        render_resource::{AsBindGroup, ShaderRef},
-        storage::ShaderStorageBuffer,
-    },
+    render::{render_resource::AsBindGroup, storage::ShaderStorageBuffer},
+    shader::ShaderRef,
 };
 
 const SHADER_ASSET_PATH: &str = "shaders/storage_buffer.wgsl";
diff --git a/examples/shader_advanced/custom_vertex_attribute.rs b/examples/shader_advanced/custom_vertex_attribute.rs
index 5a12db436477b..1741b08e39fea 100644
--- a/examples/shader_advanced/custom_vertex_attribute.rs
+++ b/examples/shader_advanced/custom_vertex_attribute.rs
@@ -6,9 +6,9 @@ use bevy::{
     prelude::*,
     reflect::TypePath,
     render::render_resource::{
-        AsBindGroup, RenderPipelineDescriptor, ShaderRef, SpecializedMeshPipelineError,
-        VertexFormat,
+        AsBindGroup, RenderPipelineDescriptor, SpecializedMeshPipelineError, VertexFormat,
     },
+    shader::ShaderRef,
 };
 
 /// This example uses a shader source file from the assets subdirectory
diff --git a/examples/shader_advanced/texture_binding_array.rs b/examples/shader_advanced/texture_binding_array.rs
index dda804390752f..73094628c0d18 100644
--- a/examples/shader_advanced/texture_binding_array.rs
+++ b/examples/shader_advanced/texture_binding_array.rs
@@ -15,6 +15,7 @@ use bevy::{
         texture::{FallbackImage, GpuImage},
         RenderApp, RenderStartup,
     },
+    shader::ShaderRef,
 };
 use std::{num::NonZero, process::exit};
 
diff --git a/examples/ui/ui_material.rs b/examples/ui/ui_material.rs
index 68a63446f7308..61133a44cc1fd 100644
--- a/examples/ui/ui_material.rs
+++ b/examples/ui/ui_material.rs
@@ -2,6 +2,7 @@
 
 use bevy::{
     color::palettes::css::DARK_BLUE, prelude::*, reflect::TypePath, render::render_resource::*,
+    shader::ShaderRef,
 };
 
 /// This example uses a shader source file from the assets subdirectory
