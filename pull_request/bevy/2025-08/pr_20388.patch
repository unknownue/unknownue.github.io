diff --git a/crates/bevy_gltf/Cargo.toml b/crates/bevy_gltf/Cargo.toml
index 7c4216d8897f2..4a08fa750402f 100644
--- a/crates/bevy_gltf/Cargo.toml
+++ b/crates/bevy_gltf/Cargo.toml
@@ -31,9 +31,7 @@ bevy_mesh = { path = "../bevy_mesh", version = "0.17.0-dev" }
 bevy_pbr = { path = "../bevy_pbr", version = "0.17.0-dev" }
 bevy_reflect = { path = "../bevy_reflect", version = "0.17.0-dev" }
 bevy_render = { path = "../bevy_render", version = "0.17.0-dev" }
-bevy_scene = { path = "../bevy_scene", version = "0.17.0-dev", features = [
-  "bevy_render",
-] }
+bevy_scene = { path = "../bevy_scene", version = "0.17.0-dev" }
 bevy_transform = { path = "../bevy_transform", version = "0.17.0-dev" }
 bevy_tasks = { path = "../bevy_tasks", version = "0.17.0-dev" }
 bevy_platform = { path = "../bevy_platform", version = "0.17.0-dev", default-features = false, features = [
diff --git a/crates/bevy_internal/Cargo.toml b/crates/bevy_internal/Cargo.toml
index 6caaa09198f53..81fcb61133085 100644
--- a/crates/bevy_internal/Cargo.toml
+++ b/crates/bevy_internal/Cargo.toml
@@ -224,7 +224,6 @@ bevy_text = ["dep:bevy_text", "bevy_image"]
 
 bevy_render = [
   "dep:bevy_render",
-  "bevy_scene?/bevy_render",
   "bevy_gizmos?/bevy_render",
   "bevy_camera",
   "bevy_shader",
diff --git a/crates/bevy_scene/Cargo.toml b/crates/bevy_scene/Cargo.toml
index 48d718b410981..ef26a21b1d034 100644
--- a/crates/bevy_scene/Cargo.toml
+++ b/crates/bevy_scene/Cargo.toml
@@ -15,7 +15,6 @@ serialize = [
   "uuid/serde",
   "bevy_ecs/serialize",
   "bevy_platform/serialize",
-  "bevy_render?/serialize",
 ]
 
 [dependencies]
@@ -27,7 +26,7 @@ bevy_ecs = { path = "../bevy_ecs", version = "0.17.0-dev" }
 bevy_reflect = { path = "../bevy_reflect", version = "0.17.0-dev" }
 bevy_transform = { path = "../bevy_transform", version = "0.17.0-dev" }
 bevy_utils = { path = "../bevy_utils", version = "0.17.0-dev" }
-bevy_render = { path = "../bevy_render", version = "0.17.0-dev", optional = true }
+bevy_camera = { path = "../bevy_camera", version = "0.17.0-dev" }
 bevy_platform = { path = "../bevy_platform", version = "0.17.0-dev", default-features = false, features = [
   "std",
 ] }
diff --git a/crates/bevy_scene/src/components.rs b/crates/bevy_scene/src/components.rs
index d4d42c3a1c98c..7d4e9aef2dbf9 100644
--- a/crates/bevy_scene/src/components.rs
+++ b/crates/bevy_scene/src/components.rs
@@ -5,8 +5,7 @@ use bevy_reflect::{prelude::ReflectDefault, Reflect};
 use bevy_transform::components::Transform;
 use derive_more::derive::From;
 
-#[cfg(feature = "bevy_render")]
-use bevy_render::view::visibility::Visibility;
+use bevy_camera::visibility::Visibility;
 
 use crate::{DynamicScene, Scene};
 
@@ -15,7 +14,7 @@ use crate::{DynamicScene, Scene};
 #[derive(Component, Clone, Debug, Default, Deref, DerefMut, Reflect, PartialEq, Eq, From)]
 #[reflect(Component, Default, Debug, PartialEq, Clone)]
 #[require(Transform)]
-#[cfg_attr(feature = "bevy_render", require(Visibility))]
+#[require(Visibility)]
 pub struct SceneRoot(pub Handle<Scene>);
 
 /// Adding this component will spawn the scene as a child of that entity.
@@ -23,5 +22,5 @@ pub struct SceneRoot(pub Handle<Scene>);
 #[derive(Component, Clone, Debug, Default, Deref, DerefMut, Reflect, PartialEq, Eq, From)]
 #[reflect(Component, Default, Debug, PartialEq, Clone)]
 #[require(Transform)]
-#[cfg_attr(feature = "bevy_render", require(Visibility))]
+#[require(Visibility)]
 pub struct DynamicSceneRoot(pub Handle<DynamicScene>);
