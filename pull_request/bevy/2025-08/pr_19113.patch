diff --git a/Cargo.toml b/Cargo.toml
index a8516f186dd73..a2df406f5c80f 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -629,7 +629,7 @@ bevy_image = { path = "crates/bevy_image", version = "0.17.0-dev", default-featu
 bevy_gizmos = { path = "crates/bevy_gizmos", version = "0.17.0-dev", default-features = false }
 # Needed to poll Task examples
 futures-lite = "2.0.1"
-async-std = "1.13"
+futures-timer = { version = "3", features = ["wasm-bindgen", "gloo-timers"] }
 crossbeam-channel = "0.5.0"
 argh = "0.1.12"
 thiserror = "2.0"
diff --git a/examples/async_tasks/async_compute.rs b/examples/async_tasks/async_compute.rs
index 7e24525cb6230..50bb7c70319c6 100644
--- a/examples/async_tasks/async_compute.rs
+++ b/examples/async_tasks/async_compute.rs
@@ -6,6 +6,7 @@ use bevy::{
     prelude::*,
     tasks::{block_on, futures_lite::future, AsyncComputeTaskPool, Task},
 };
+use futures_timer::Delay;
 use rand::Rng;
 use std::time::Duration;
 
@@ -62,7 +63,7 @@ fn spawn_tasks(mut commands: Commands) {
                     let duration = Duration::from_secs_f32(rand::rng().random_range(0.05..5.0));
 
                     // Pretend this is a time-intensive function. :)
-                    async_std::task::sleep(duration).await;
+                    Delay::new(duration).await;
 
                     // Such hard work, all done!
                     let transform = Transform::from_xyz(x as f32, y as f32, z as f32);
