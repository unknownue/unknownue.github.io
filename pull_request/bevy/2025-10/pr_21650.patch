diff --git a/crates/bevy_state/src/lib.rs b/crates/bevy_state/src/lib.rs
index 2b2874a2c44fa..a354cf758fe51 100644
--- a/crates/bevy_state/src/lib.rs
+++ b/crates/bevy_state/src/lib.rs
@@ -29,7 +29,8 @@
 //! - The [`in_state<S>`](crate::condition::in_state) and [`state_changed<S>`](crate::condition::state_changed) run conditions - which are used
 //!   to determine whether a system should run based on the current state.
 //!
-//! Bevy also provides ("state-scoped entities") [`state_scoped`](`crate::state_scoped`) functionality for managing the lifetime of entities in the context of game states.
+//! Bevy also provides functionality for managing the lifetime of entities in the context of game states, using the [`state_scoped`] module.
+//! Specifically, the marker components [`DespawnOnEnter<S>`](crate::state_scoped::DespawnOnEnter) and [`DespawnOnExit<S>`](crate::state_scoped::DespawnOnExit) are provided for despawning entities on state transition.
 //! This, especially in combination with system scheduling, enables a flexible and expressive way to manage spawning and despawning entities.
 
 #![cfg_attr(
