diff --git a/Cargo.toml b/Cargo.toml
index 429a3094795cd..e362ae62d145c 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -136,7 +136,7 @@ default = [
   "bevy_color",
   "bevy_core_pipeline",
   "bevy_core_widgets",
-  "bevy_anti_aliasing",
+  "bevy_anti_alias",
   "bevy_gilrs",
   "bevy_gizmos",
   "bevy_gltf",
@@ -217,7 +217,7 @@ bevy_color = ["bevy_internal/bevy_color"]
 bevy_core_pipeline = ["bevy_internal/bevy_core_pipeline"]
 
 # Provides various anti aliasing solutions
-bevy_anti_aliasing = ["bevy_internal/bevy_anti_aliasing"]
+bevy_anti_alias = ["bevy_internal/bevy_anti_alias"]
 
 # Adds gamepad support
 bevy_gilrs = ["bevy_internal/bevy_gilrs"]
diff --git a/crates/bevy_anti_aliasing/Cargo.toml b/crates/bevy_anti_alias/Cargo.toml
similarity index 98%
rename from crates/bevy_anti_aliasing/Cargo.toml
rename to crates/bevy_anti_alias/Cargo.toml
index 696aa026ee24a..57150ecdf363d 100644
--- a/crates/bevy_anti_aliasing/Cargo.toml
+++ b/crates/bevy_anti_alias/Cargo.toml
@@ -1,5 +1,5 @@
 [package]
-name = "bevy_anti_aliasing"
+name = "bevy_anti_alias"
 version = "0.17.0-dev"
 edition = "2024"
 description = "Provides various anti aliasing implementations for Bevy Engine"
diff --git a/crates/bevy_anti_aliasing/LICENSE-APACHE b/crates/bevy_anti_alias/LICENSE-APACHE
similarity index 100%
rename from crates/bevy_anti_aliasing/LICENSE-APACHE
rename to crates/bevy_anti_alias/LICENSE-APACHE
diff --git a/crates/bevy_anti_aliasing/LICENSE-MIT b/crates/bevy_anti_alias/LICENSE-MIT
similarity index 100%
rename from crates/bevy_anti_aliasing/LICENSE-MIT
rename to crates/bevy_anti_alias/LICENSE-MIT
diff --git a/crates/bevy_anti_aliasing/README.md b/crates/bevy_anti_alias/README.md
similarity index 96%
rename from crates/bevy_anti_aliasing/README.md
rename to crates/bevy_anti_alias/README.md
index ba0123c31bc44..4b0a030dd2199 100644
--- a/crates/bevy_anti_aliasing/README.md
+++ b/crates/bevy_anti_alias/README.md
@@ -1,4 +1,4 @@
-# Bevy Anti Aliasing
+# Bevy Anti Alias
 
 [![License](https://img.shields.io/badge/license-MIT%2FApache-blue.svg)](https://github.com/bevyengine/bevy#license)
 [![Crates.io](https://img.shields.io/crates/v/bevy_core_pipeline.svg)](https://crates.io/crates/bevy_core_pipeline)
diff --git a/crates/bevy_anti_aliasing/src/contrast_adaptive_sharpening/mod.rs b/crates/bevy_anti_alias/src/contrast_adaptive_sharpening/mod.rs
similarity index 100%
rename from crates/bevy_anti_aliasing/src/contrast_adaptive_sharpening/mod.rs
rename to crates/bevy_anti_alias/src/contrast_adaptive_sharpening/mod.rs
diff --git a/crates/bevy_anti_aliasing/src/contrast_adaptive_sharpening/node.rs b/crates/bevy_anti_alias/src/contrast_adaptive_sharpening/node.rs
similarity index 100%
rename from crates/bevy_anti_aliasing/src/contrast_adaptive_sharpening/node.rs
rename to crates/bevy_anti_alias/src/contrast_adaptive_sharpening/node.rs
diff --git a/crates/bevy_anti_aliasing/src/contrast_adaptive_sharpening/robust_contrast_adaptive_sharpening.wgsl b/crates/bevy_anti_alias/src/contrast_adaptive_sharpening/robust_contrast_adaptive_sharpening.wgsl
similarity index 100%
rename from crates/bevy_anti_aliasing/src/contrast_adaptive_sharpening/robust_contrast_adaptive_sharpening.wgsl
rename to crates/bevy_anti_alias/src/contrast_adaptive_sharpening/robust_contrast_adaptive_sharpening.wgsl
diff --git a/crates/bevy_anti_aliasing/src/dlss/extract.rs b/crates/bevy_anti_alias/src/dlss/extract.rs
similarity index 100%
rename from crates/bevy_anti_aliasing/src/dlss/extract.rs
rename to crates/bevy_anti_alias/src/dlss/extract.rs
diff --git a/crates/bevy_anti_aliasing/src/dlss/mod.rs b/crates/bevy_anti_alias/src/dlss/mod.rs
similarity index 100%
rename from crates/bevy_anti_aliasing/src/dlss/mod.rs
rename to crates/bevy_anti_alias/src/dlss/mod.rs
diff --git a/crates/bevy_anti_aliasing/src/dlss/node.rs b/crates/bevy_anti_alias/src/dlss/node.rs
similarity index 100%
rename from crates/bevy_anti_aliasing/src/dlss/node.rs
rename to crates/bevy_anti_alias/src/dlss/node.rs
diff --git a/crates/bevy_anti_aliasing/src/dlss/prepare.rs b/crates/bevy_anti_alias/src/dlss/prepare.rs
similarity index 100%
rename from crates/bevy_anti_aliasing/src/dlss/prepare.rs
rename to crates/bevy_anti_alias/src/dlss/prepare.rs
diff --git a/crates/bevy_anti_aliasing/src/fxaa/fxaa.wgsl b/crates/bevy_anti_alias/src/fxaa/fxaa.wgsl
similarity index 100%
rename from crates/bevy_anti_aliasing/src/fxaa/fxaa.wgsl
rename to crates/bevy_anti_alias/src/fxaa/fxaa.wgsl
diff --git a/crates/bevy_anti_aliasing/src/fxaa/mod.rs b/crates/bevy_anti_alias/src/fxaa/mod.rs
similarity index 100%
rename from crates/bevy_anti_aliasing/src/fxaa/mod.rs
rename to crates/bevy_anti_alias/src/fxaa/mod.rs
diff --git a/crates/bevy_anti_aliasing/src/fxaa/node.rs b/crates/bevy_anti_alias/src/fxaa/node.rs
similarity index 100%
rename from crates/bevy_anti_aliasing/src/fxaa/node.rs
rename to crates/bevy_anti_alias/src/fxaa/node.rs
diff --git a/crates/bevy_anti_aliasing/src/lib.rs b/crates/bevy_anti_alias/src/lib.rs
similarity index 92%
rename from crates/bevy_anti_aliasing/src/lib.rs
rename to crates/bevy_anti_alias/src/lib.rs
index 40d5085ddcba5..9276494b67c16 100644
--- a/crates/bevy_anti_aliasing/src/lib.rs
+++ b/crates/bevy_anti_alias/src/lib.rs
@@ -19,8 +19,8 @@ pub mod smaa;
 pub mod taa;
 
 #[derive(Default)]
-pub struct AntiAliasingPlugin;
-impl Plugin for AntiAliasingPlugin {
+pub struct AntiAliasPlugin;
+impl Plugin for AntiAliasPlugin {
     fn build(&self, app: &mut bevy_app::App) {
         app.add_plugins((
             FxaaPlugin,
diff --git a/crates/bevy_anti_aliasing/src/smaa/SMAAAreaLUT.ktx2 b/crates/bevy_anti_alias/src/smaa/SMAAAreaLUT.ktx2
similarity index 100%
rename from crates/bevy_anti_aliasing/src/smaa/SMAAAreaLUT.ktx2
rename to crates/bevy_anti_alias/src/smaa/SMAAAreaLUT.ktx2
diff --git a/crates/bevy_anti_aliasing/src/smaa/SMAASearchLUT.ktx2 b/crates/bevy_anti_alias/src/smaa/SMAASearchLUT.ktx2
similarity index 100%
rename from crates/bevy_anti_aliasing/src/smaa/SMAASearchLUT.ktx2
rename to crates/bevy_anti_alias/src/smaa/SMAASearchLUT.ktx2
diff --git a/crates/bevy_anti_aliasing/src/smaa/mod.rs b/crates/bevy_anti_alias/src/smaa/mod.rs
similarity index 100%
rename from crates/bevy_anti_aliasing/src/smaa/mod.rs
rename to crates/bevy_anti_alias/src/smaa/mod.rs
diff --git a/crates/bevy_anti_aliasing/src/smaa/smaa.wgsl b/crates/bevy_anti_alias/src/smaa/smaa.wgsl
similarity index 100%
rename from crates/bevy_anti_aliasing/src/smaa/smaa.wgsl
rename to crates/bevy_anti_alias/src/smaa/smaa.wgsl
diff --git a/crates/bevy_anti_aliasing/src/taa/mod.rs b/crates/bevy_anti_alias/src/taa/mod.rs
similarity index 100%
rename from crates/bevy_anti_aliasing/src/taa/mod.rs
rename to crates/bevy_anti_alias/src/taa/mod.rs
diff --git a/crates/bevy_anti_aliasing/src/taa/taa.wgsl b/crates/bevy_anti_alias/src/taa/taa.wgsl
similarity index 100%
rename from crates/bevy_anti_aliasing/src/taa/taa.wgsl
rename to crates/bevy_anti_alias/src/taa/taa.wgsl
diff --git a/crates/bevy_internal/Cargo.toml b/crates/bevy_internal/Cargo.toml
index a601e0bdf5f22..57d2f10f50665 100644
--- a/crates/bevy_internal/Cargo.toml
+++ b/crates/bevy_internal/Cargo.toml
@@ -14,7 +14,7 @@ trace = [
   "bevy_app/trace",
   "bevy_asset?/trace",
   "bevy_core_pipeline?/trace",
-  "bevy_anti_aliasing?/trace",
+  "bevy_anti_alias?/trace",
   "bevy_ecs/trace",
   "bevy_log/trace",
   "bevy_pbr?/trace",
@@ -73,17 +73,17 @@ tonemapping_luts = [
 ]
 
 # Include SMAA LUT KTX2 Files
-smaa_luts = ["bevy_anti_aliasing?/smaa_luts", "ktx2", "bevy_image/zstd"]
+smaa_luts = ["bevy_anti_alias?/smaa_luts", "ktx2", "bevy_image/zstd"]
 
 # Include Bluenoise texture for environment map generation.
 bluenoise_texture = ["bevy_pbr?/bluenoise_texture", "ktx2", "bevy_image/zstd"]
 
 # NVIDIA Deep Learning Super Sampling
-dlss = ["bevy_anti_aliasing/dlss", "bevy_solari?/dlss"]
+dlss = ["bevy_anti_alias/dlss", "bevy_solari?/dlss"]
 
 # Forcibly disable DLSS so that cargo build --all-features works without the DLSS SDK being installed. Not meant for users.
 force_disable_dlss = [
-  "bevy_anti_aliasing?/force_disable_dlss",
+  "bevy_anti_alias?/force_disable_dlss",
   "bevy_solari?/force_disable_dlss",
 ]
 
@@ -182,7 +182,7 @@ pbr_specular_textures = [
 # Optimise for WebGL2
 webgl = [
   "bevy_core_pipeline?/webgl",
-  "bevy_anti_aliasing?/webgl",
+  "bevy_anti_alias?/webgl",
   "bevy_pbr?/webgl",
   "bevy_render?/webgl",
   "bevy_gizmos?/webgl",
@@ -191,7 +191,7 @@ webgl = [
 
 webgpu = [
   "bevy_core_pipeline?/webgpu",
-  "bevy_anti_aliasing?/webgpu",
+  "bevy_anti_alias?/webgpu",
   "bevy_pbr?/webgpu",
   "bevy_render?/webgpu",
   "bevy_gizmos?/webgpu",
@@ -234,7 +234,7 @@ bevy_render = [
   "bevy_gizmos?/bevy_render",
 ]
 bevy_core_pipeline = ["dep:bevy_core_pipeline", "bevy_render"]
-bevy_anti_aliasing = ["dep:bevy_anti_aliasing", "bevy_core_pipeline"]
+bevy_anti_alias = ["dep:bevy_anti_alias", "bevy_core_pipeline"]
 bevy_pbr = [
   "dep:bevy_pbr",
   "bevy_light",
@@ -475,7 +475,7 @@ bevy_color = { path = "../bevy_color", optional = true, version = "0.17.0-dev",
 ] }
 bevy_core_pipeline = { path = "../bevy_core_pipeline", optional = true, version = "0.17.0-dev" }
 bevy_core_widgets = { path = "../bevy_core_widgets", optional = true, version = "0.17.0-dev" }
-bevy_anti_aliasing = { path = "../bevy_anti_aliasing", optional = true, version = "0.17.0-dev" }
+bevy_anti_alias = { path = "../bevy_anti_alias", optional = true, version = "0.17.0-dev" }
 bevy_dev_tools = { path = "../bevy_dev_tools", optional = true, version = "0.17.0-dev" }
 bevy_gilrs = { path = "../bevy_gilrs", optional = true, version = "0.17.0-dev" }
 bevy_gizmos = { path = "../bevy_gizmos", optional = true, version = "0.17.0-dev", default-features = false }
diff --git a/crates/bevy_internal/src/default_plugins.rs b/crates/bevy_internal/src/default_plugins.rs
index f72a67116ff01..887e8f4c73b56 100644
--- a/crates/bevy_internal/src/default_plugins.rs
+++ b/crates/bevy_internal/src/default_plugins.rs
@@ -32,7 +32,7 @@ plugin_group! {
         #[cfg(feature = "bevy_winit")]
         bevy_winit:::WinitPlugin,
         #[custom(cfg(all(feature = "dlss", not(feature = "force_disable_dlss"))))]
-        bevy_anti_aliasing::dlss:::DlssInitPlugin,
+        bevy_anti_alias::dlss:::DlssInitPlugin,
         #[cfg(feature = "bevy_render")]
         bevy_render:::RenderPlugin,
         // NOTE: Load this after renderer initialization so that it knows about the supported
@@ -50,8 +50,8 @@ plugin_group! {
         bevy_render::pipelined_rendering:::PipelinedRenderingPlugin,
         #[cfg(feature = "bevy_core_pipeline")]
         bevy_core_pipeline:::CorePipelinePlugin,
-        #[cfg(feature = "bevy_anti_aliasing")]
-        bevy_anti_aliasing:::AntiAliasingPlugin,
+        #[cfg(feature = "bevy_anti_alias")]
+        bevy_anti_alias:::AntiAliasPlugin,
         #[cfg(feature = "bevy_sprite")]
         bevy_sprite:::SpritePlugin,
         #[cfg(feature = "bevy_sprite_render")]
diff --git a/crates/bevy_internal/src/lib.rs b/crates/bevy_internal/src/lib.rs
index 9d8458397f663..303f865e4e6e6 100644
--- a/crates/bevy_internal/src/lib.rs
+++ b/crates/bevy_internal/src/lib.rs
@@ -20,8 +20,8 @@ pub use bevy_a11y as a11y;
 pub use bevy_android as android;
 #[cfg(feature = "bevy_animation")]
 pub use bevy_animation as animation;
-#[cfg(feature = "bevy_anti_aliasing")]
-pub use bevy_anti_aliasing as anti_aliasing;
+#[cfg(feature = "bevy_anti_alias")]
+pub use bevy_anti_alias as anti_alias;
 pub use bevy_app as app;
 #[cfg(feature = "bevy_asset")]
 pub use bevy_asset as asset;
diff --git a/crates/bevy_solari/Cargo.toml b/crates/bevy_solari/Cargo.toml
index 4cfb46c742f6e..473d189ee19a7 100644
--- a/crates/bevy_solari/Cargo.toml
+++ b/crates/bevy_solari/Cargo.toml
@@ -10,7 +10,7 @@ keywords = ["bevy"]
 
 [dependencies]
 # bevy
-bevy_anti_aliasing = { path = "../bevy_anti_aliasing", version = "0.17.0-dev" }
+bevy_anti_alias = { path = "../bevy_anti_alias", version = "0.17.0-dev" }
 bevy_app = { path = "../bevy_app", version = "0.17.0-dev" }
 bevy_asset = { path = "../bevy_asset", version = "0.17.0-dev" }
 bevy_camera = { path = "../bevy_camera", version = "0.17.0-dev" }
@@ -38,8 +38,8 @@ derive_more = { version = "2", default-features = false, features = ["from"] }
 tracing = { version = "0.1", default-features = false, features = ["std"] }
 
 [features]
-dlss = ["bevy_anti_aliasing/dlss"]
-force_disable_dlss = ["bevy_anti_aliasing/force_disable_dlss"]
+dlss = ["bevy_anti_alias/dlss"]
+force_disable_dlss = ["bevy_anti_alias/force_disable_dlss"]
 
 [lints]
 workspace = true
diff --git a/crates/bevy_solari/src/realtime/node.rs b/crates/bevy_solari/src/realtime/node.rs
index 79a4eda3d9dff..1de282ed4192e 100644
--- a/crates/bevy_solari/src/realtime/node.rs
+++ b/crates/bevy_solari/src/realtime/node.rs
@@ -4,7 +4,7 @@ use super::{
 };
 use crate::scene::RaytracingSceneBindings;
 #[cfg(all(feature = "dlss", not(feature = "force_disable_dlss")))]
-use bevy_anti_aliasing::dlss::ViewDlssRayReconstructionTextures;
+use bevy_anti_alias::dlss::ViewDlssRayReconstructionTextures;
 use bevy_asset::{load_embedded_asset, Handle};
 use bevy_core_pipeline::prepass::{
     PreviousViewData, PreviousViewUniformOffset, PreviousViewUniforms, ViewPrepassTextures,
diff --git a/crates/bevy_solari/src/realtime/prepare.rs b/crates/bevy_solari/src/realtime/prepare.rs
index b803269a07a01..e4d13d3c72425 100644
--- a/crates/bevy_solari/src/realtime/prepare.rs
+++ b/crates/bevy_solari/src/realtime/prepare.rs
@@ -1,6 +1,6 @@
 use super::SolariLighting;
 #[cfg(all(feature = "dlss", not(feature = "force_disable_dlss")))]
-use bevy_anti_aliasing::dlss::{
+use bevy_anti_alias::dlss::{
     Dlss, DlssRayReconstructionFeature, ViewDlssRayReconstructionTextures,
 };
 use bevy_camera::MainPassResolutionOverride;
diff --git a/docs/cargo_features.md b/docs/cargo_features.md
index 8eaa71578ce95..d02a7e941e75f 100644
--- a/docs/cargo_features.md
+++ b/docs/cargo_features.md
@@ -16,7 +16,7 @@ The default feature set enables most of the expected features of a game engine,
 |animation|Enable animation support, and glTF animation loading|
 |async_executor|Uses `async-executor` as a task execution backend.|
 |bevy_animation|Provides animation functionality|
-|bevy_anti_aliasing|Provides various anti aliasing solutions|
+|bevy_anti_alias|Provides various anti aliasing solutions|
 |bevy_asset|Provides asset functionality|
 |bevy_audio|Provides audio functionality|
 |bevy_camera|Provides camera and visibility types, as well as culling primitives.|
diff --git a/examples/3d/anti_aliasing.rs b/examples/3d/anti_aliasing.rs
index 4ab2c66f58ce5..02c056571263e 100644
--- a/examples/3d/anti_aliasing.rs
+++ b/examples/3d/anti_aliasing.rs
@@ -3,7 +3,7 @@
 use std::{f32::consts::PI, fmt::Write};
 
 use bevy::{
-    anti_aliasing::{
+    anti_alias::{
         contrast_adaptive_sharpening::ContrastAdaptiveSharpening,
         fxaa::{Fxaa, Sensitivity},
         smaa::{Smaa, SmaaPreset},
@@ -22,7 +22,7 @@ use bevy::{
 };
 
 #[cfg(all(feature = "dlss", not(feature = "force_disable_dlss")))]
-use bevy::anti_aliasing::dlss::{
+use bevy::anti_alias::dlss::{
     Dlss, DlssPerfQualityMode, DlssProjectId, DlssSuperResolutionSupported,
 };
 
diff --git a/examples/3d/deferred_rendering.rs b/examples/3d/deferred_rendering.rs
index 0936721c4c70d..ff3656d7a6ecb 100644
--- a/examples/3d/deferred_rendering.rs
+++ b/examples/3d/deferred_rendering.rs
@@ -3,7 +3,7 @@
 use std::f32::consts::*;
 
 use bevy::{
-    anti_aliasing::fxaa::Fxaa,
+    anti_alias::fxaa::Fxaa,
     core_pipeline::prepass::{DeferredPrepass, DepthPrepass, MotionVectorPrepass, NormalPrepass},
     image::ImageLoaderSettings,
     light::{
diff --git a/examples/3d/pcss.rs b/examples/3d/pcss.rs
index fec0ff7fe72af..ccb1b18e3951f 100644
--- a/examples/3d/pcss.rs
+++ b/examples/3d/pcss.rs
@@ -3,7 +3,7 @@
 use std::f32::consts::PI;
 
 use bevy::{
-    anti_aliasing::taa::TemporalAntiAliasing,
+    anti_alias::taa::TemporalAntiAliasing,
     camera::{
         primitives::{CubemapFrusta, Frustum},
         visibility::{CubemapVisibleEntities, VisibleMeshEntities},
diff --git a/examples/3d/scrolling_fog.rs b/examples/3d/scrolling_fog.rs
index 5169eea6980f0..760cd3e1c5aef 100644
--- a/examples/3d/scrolling_fog.rs
+++ b/examples/3d/scrolling_fog.rs
@@ -11,7 +11,7 @@
 //! interactions change based on the density of the fog.
 
 use bevy::{
-    anti_aliasing::taa::TemporalAntiAliasing,
+    anti_alias::taa::TemporalAntiAliasing,
     core_pipeline::bloom::Bloom,
     image::{
         ImageAddressMode, ImageFilterMode, ImageLoaderSettings, ImageSampler,
diff --git a/examples/3d/skybox.rs b/examples/3d/skybox.rs
index 22be77c4e7369..acfe0644d74cb 100644
--- a/examples/3d/skybox.rs
+++ b/examples/3d/skybox.rs
@@ -4,7 +4,7 @@
 mod camera_controller;
 
 use bevy::{
-    anti_aliasing::taa::TemporalAntiAliasing,
+    anti_alias::taa::TemporalAntiAliasing,
     core_pipeline::Skybox,
     image::CompressedImageFormats,
     pbr::ScreenSpaceAmbientOcclusion,
diff --git a/examples/3d/solari.rs b/examples/3d/solari.rs
index 12c89abcc9eb4..8a3314f4e285f 100644
--- a/examples/3d/solari.rs
+++ b/examples/3d/solari.rs
@@ -19,7 +19,7 @@ use camera_controller::{CameraController, CameraControllerPlugin};
 use std::f32::consts::PI;
 
 #[cfg(all(feature = "dlss", not(feature = "force_disable_dlss")))]
-use bevy::anti_aliasing::dlss::{
+use bevy::anti_alias::dlss::{
     Dlss, DlssProjectId, DlssRayReconstructionFeature, DlssRayReconstructionSupported,
 };
 
diff --git a/examples/3d/ssao.rs b/examples/3d/ssao.rs
index 4d9598c5fbaae..129979b0fbb3d 100644
--- a/examples/3d/ssao.rs
+++ b/examples/3d/ssao.rs
@@ -1,7 +1,7 @@
 //! A scene showcasing screen space ambient occlusion.
 
 use bevy::{
-    anti_aliasing::taa::TemporalAntiAliasing,
+    anti_alias::taa::TemporalAntiAliasing,
     math::ops,
     pbr::{ScreenSpaceAmbientOcclusion, ScreenSpaceAmbientOcclusionQualityLevel},
     prelude::*,
diff --git a/examples/3d/ssr.rs b/examples/3d/ssr.rs
index db669a0546f45..301f617e70dee 100644
--- a/examples/3d/ssr.rs
+++ b/examples/3d/ssr.rs
@@ -3,7 +3,7 @@
 use std::ops::Range;
 
 use bevy::{
-    anti_aliasing::fxaa::Fxaa,
+    anti_alias::fxaa::Fxaa,
     color::palettes::css::{BLACK, WHITE},
     core_pipeline::Skybox,
     image::{
diff --git a/examples/3d/transmission.rs b/examples/3d/transmission.rs
index ee6480bcb1b9a..0fee9347b215f 100644
--- a/examples/3d/transmission.rs
+++ b/examples/3d/transmission.rs
@@ -37,7 +37,7 @@ use bevy::{
 // it _greatly enhances_ the look of the resulting blur effects.
 // Sadly, it's not available under WebGL.
 #[cfg(any(feature = "webgpu", not(target_arch = "wasm32")))]
-use bevy::anti_aliasing::taa::TemporalAntiAliasing;
+use bevy::anti_alias::taa::TemporalAntiAliasing;
 
 use rand::random;
 
diff --git a/release-content/migration-guides/taa_non_experimental.md b/release-content/migration-guides/taa_non_experimental.md
index b3d4c23aa9ac1..416ee164bfc06 100644
--- a/release-content/migration-guides/taa_non_experimental.md
+++ b/release-content/migration-guides/taa_non_experimental.md
@@ -5,6 +5,6 @@ pull_requests: [18349]
 
 TAA is no longer experimental.
 
-`TemporalAntiAliasPlugin` no longer needs to be added to your app to use TAA. It is now part of `DefaultPlugins`, via `AntiAliasingPlugin`.
+`TemporalAntiAliasPlugin` no longer needs to be added to your app to use TAA. It is now part of `DefaultPlugins`, via `AntiAliasPlugin`.
 
 `TemporalAntiAliasing` now uses `MipBias` as a required component in the main world, instead of overriding it manually in the render world.
