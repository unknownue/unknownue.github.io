diff --git a/crates/bevy_anti_alias/src/taa/mod.rs b/crates/bevy_anti_alias/src/taa/mod.rs
index 5a65726f39d81..1781f90d9935f 100644
--- a/crates/bevy_anti_alias/src/taa/mod.rs
+++ b/crates/bevy_anti_alias/src/taa/mod.rs
@@ -73,7 +73,7 @@ impl Plugin for TemporalAntiAliasPlugin {
             .add_render_graph_edges(
                 Core3d,
                 (
-                    Node3d::EndMainPass,
+                    Node3d::StartMainPassPostProcessing,
                     Node3d::MotionBlur, // Running before TAA reduces edge artifacts and noise
                     Node3d::Taa,
                     Node3d::Bloom,
diff --git a/crates/bevy_core_pipeline/src/core_2d/mod.rs b/crates/bevy_core_pipeline/src/core_2d/mod.rs
index a32adbe57bd81..dee095185d44b 100644
--- a/crates/bevy_core_pipeline/src/core_2d/mod.rs
+++ b/crates/bevy_core_pipeline/src/core_2d/mod.rs
@@ -19,6 +19,7 @@ pub mod graph {
         MainTransparentPass,
         EndMainPass,
         Wireframe,
+        StartMainPassPostProcessing,
         Bloom,
         PostProcessing,
         Tonemapping,
@@ -118,6 +119,7 @@ impl Plugin for Core2dPlugin {
                 Node2d::MainTransparentPass,
             )
             .add_render_graph_node::<EmptyNode>(Core2d, Node2d::EndMainPass)
+            .add_render_graph_node::<EmptyNode>(Core2d, Node2d::StartMainPassPostProcessing)
             .add_render_graph_node::<ViewNodeRunner<TonemappingNode>>(Core2d, Node2d::Tonemapping)
             .add_render_graph_node::<EmptyNode>(Core2d, Node2d::EndMainPassPostProcessing)
             .add_render_graph_node::<ViewNodeRunner<UpscalingNode>>(Core2d, Node2d::Upscaling)
@@ -128,6 +130,7 @@ impl Plugin for Core2dPlugin {
                     Node2d::MainOpaquePass,
                     Node2d::MainTransparentPass,
                     Node2d::EndMainPass,
+                    Node2d::StartMainPassPostProcessing,
                     Node2d::Tonemapping,
                     Node2d::EndMainPassPostProcessing,
                     Node2d::Upscaling,
diff --git a/crates/bevy_core_pipeline/src/core_3d/mod.rs b/crates/bevy_core_pipeline/src/core_3d/mod.rs
index ffc25046a57e5..0e5a07b870e83 100644
--- a/crates/bevy_core_pipeline/src/core_3d/mod.rs
+++ b/crates/bevy_core_pipeline/src/core_3d/mod.rs
@@ -28,6 +28,7 @@ pub mod graph {
         MainTransparentPass,
         EndMainPass,
         Wireframe,
+        StartMainPassPostProcessing,
         LateDownsampleDepth,
         MotionBlur,
         Taa,
@@ -213,6 +214,7 @@ impl Plugin for Core3dPlugin {
                 Node3d::MainTransparentPass,
             )
             .add_render_graph_node::<EmptyNode>(Core3d, Node3d::EndMainPass)
+            .add_render_graph_node::<EmptyNode>(Core3d, Node3d::StartMainPassPostProcessing)
             .add_render_graph_node::<ViewNodeRunner<TonemappingNode>>(Core3d, Node3d::Tonemapping)
             .add_render_graph_node::<EmptyNode>(Core3d, Node3d::EndMainPassPostProcessing)
             .add_render_graph_node::<ViewNodeRunner<UpscalingNode>>(Core3d, Node3d::Upscaling)
@@ -230,6 +232,7 @@ impl Plugin for Core3dPlugin {
                     Node3d::MainTransmissivePass,
                     Node3d::MainTransparentPass,
                     Node3d::EndMainPass,
+                    Node3d::StartMainPassPostProcessing,
                     Node3d::Tonemapping,
                     Node3d::EndMainPassPostProcessing,
                     Node3d::Upscaling,
diff --git a/crates/bevy_core_pipeline/src/experimental/mip_generation/mod.rs b/crates/bevy_core_pipeline/src/experimental/mip_generation/mod.rs
index 97d928c896d4e..227a3e391a59d 100644
--- a/crates/bevy_core_pipeline/src/experimental/mip_generation/mod.rs
+++ b/crates/bevy_core_pipeline/src/experimental/mip_generation/mod.rs
@@ -95,7 +95,7 @@ impl Plugin for MipGenerationPlugin {
             .add_render_graph_edges(
                 Core3d,
                 (
-                    Node3d::EndMainPass,
+                    Node3d::StartMainPassPostProcessing,
                     Node3d::LateDownsampleDepth,
                     Node3d::EndMainPassPostProcessing,
                 ),
diff --git a/crates/bevy_pbr/src/volumetric_fog/mod.rs b/crates/bevy_pbr/src/volumetric_fog/mod.rs
index c9ad4717f6993..57cbd7bb1722c 100644
--- a/crates/bevy_pbr/src/volumetric_fog/mod.rs
+++ b/crates/bevy_pbr/src/volumetric_fog/mod.rs
@@ -102,9 +102,13 @@ impl Plugin for VolumetricFogPlugin {
             )
             .add_render_graph_edges(
                 Core3d,
-                // Volumetric fog is a postprocessing effect. Run it after the
-                // main pass but before bloom.
-                (Node3d::EndMainPass, NodePbr::VolumetricFog, Node3d::Bloom),
+                // Volumetric fog should run after the main pass but before bloom, so
+                // we order if at the start of post processing.
+                (
+                    Node3d::EndMainPass,
+                    NodePbr::VolumetricFog,
+                    Node3d::StartMainPassPostProcessing,
+                ),
             );
     }
 }
diff --git a/crates/bevy_post_process/src/auto_exposure/mod.rs b/crates/bevy_post_process/src/auto_exposure/mod.rs
index d8975aa4ec9a9..f5b090621be02 100644
--- a/crates/bevy_post_process/src/auto_exposure/mod.rs
+++ b/crates/bevy_post_process/src/auto_exposure/mod.rs
@@ -75,7 +75,11 @@ impl Plugin for AutoExposurePlugin {
             .add_render_graph_node::<AutoExposureNode>(Core3d, node::AutoExposure)
             .add_render_graph_edges(
                 Core3d,
-                (Node3d::EndMainPass, node::AutoExposure, Node3d::Tonemapping),
+                (
+                    Node3d::StartMainPassPostProcessing,
+                    node::AutoExposure,
+                    Node3d::Tonemapping,
+                ),
             );
     }
 }
diff --git a/crates/bevy_post_process/src/bloom/mod.rs b/crates/bevy_post_process/src/bloom/mod.rs
index e0f2424ec2eb5..5e22bb7c8cadd 100644
--- a/crates/bevy_post_process/src/bloom/mod.rs
+++ b/crates/bevy_post_process/src/bloom/mod.rs
@@ -81,13 +81,21 @@ impl Plugin for BloomPlugin {
             .add_render_graph_node::<ViewNodeRunner<BloomNode>>(Core3d, Node3d::Bloom)
             .add_render_graph_edges(
                 Core3d,
-                (Node3d::EndMainPass, Node3d::Bloom, Node3d::Tonemapping),
+                (
+                    Node3d::StartMainPassPostProcessing,
+                    Node3d::Bloom,
+                    Node3d::Tonemapping,
+                ),
             )
             // Add bloom to the 2d render graph
             .add_render_graph_node::<ViewNodeRunner<BloomNode>>(Core2d, Node2d::Bloom)
             .add_render_graph_edges(
                 Core2d,
-                (Node2d::EndMainPass, Node2d::Bloom, Node2d::Tonemapping),
+                (
+                    Node2d::StartMainPassPostProcessing,
+                    Node2d::Bloom,
+                    Node2d::Tonemapping,
+                ),
             );
     }
 }
diff --git a/crates/bevy_post_process/src/motion_blur/mod.rs b/crates/bevy_post_process/src/motion_blur/mod.rs
index 9026fb7e813ad..5d66c9f51b68d 100644
--- a/crates/bevy_post_process/src/motion_blur/mod.rs
+++ b/crates/bevy_post_process/src/motion_blur/mod.rs
@@ -159,7 +159,7 @@ impl Plugin for MotionBlurPlugin {
             .add_render_graph_edges(
                 Core3d,
                 (
-                    Node3d::EndMainPass,
+                    Node3d::StartMainPassPostProcessing,
                     Node3d::MotionBlur,
                     Node3d::Bloom, // we want blurred areas to bloom and tonemap properly.
                 ),
diff --git a/release-content/migration-guides/bevy_render_reorganization.md b/release-content/migration-guides/bevy_render_reorganization.md
index af7bf6c4102b7..d634bf333e020 100644
--- a/release-content/migration-guides/bevy_render_reorganization.md
+++ b/release-content/migration-guides/bevy_render_reorganization.md
@@ -39,3 +39,5 @@ They have now been given a new home in `bevy_anti_alias` and `bevy_post_process`
 If you were importing FxaaPlugin, SmaaPlugin, TemporalAntiAliasPlugin, or CasPlugin from `bevy_core_pipeline` or `bevy::core_pipeline`, you must now import them from `bevy_anti_alias` or `bevy::anti_alias`.
 
 If you were importing Bloom, AutoExposure, ChromaticAberration, DepthOfField, or MotionBlur from `bevy_core_pipeline` or `bevy::core_pipeline`, you must now import them from `bevy_post_process` or `bevy::post_process`.
+
+Additionally, you may now order rendering passes against the new `StartMainPassPostProcessing` node.
