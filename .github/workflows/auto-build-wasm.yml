name: Auto Build and Deploy WASM Projects

on:
  # Trigger when specific files in the source repository change
  repository_dispatch:
    types: [wasm-build-trigger]
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      source_repo:
        description: 'Source repository (owner/repo format)'
        required: false
        default: 'unknownue/bevy_prototype_codex'
      source_ref:
        description: 'Source repository branch/tag'
        required: false
        default: 'main'
      binary_name:
        description: 'Specific binary to build (leave empty for all)'
        required: false
        default: ''
  
  # Schedule trigger (weekly)
  schedule:
    - cron: '0 2 * * 0'  # Every Sunday at 2 AM UTC

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout target repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Checkout source repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.source_repo || 'unknownue/bevy_prototype_codex' }}
        ref: ${{ github.event.inputs.source_ref || 'main' }}
        path: 'source-repo'
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
        
    - name: Install wasm-bindgen-cli
      run: cargo install wasm-bindgen-cli
      
    - name: Install wasm-opt
      run: |
        curl -L https://github.com/WebAssembly/binaryen/releases/latest/download/binaryen-version_116-x86_64-linux.tar.gz | tar xz
        sudo cp binaryen-*/bin/wasm-opt /usr/local/bin/
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        pip install toml configparser
        
    - name: Create build configuration
      run: |
        cat > build_config.ini << EOF
        [PATHS]
        source_repo = source-repo
        target_repo = .
        
        [BUILD]
        profile = wasm-release
        features = webgpu
        optimize = true
        EOF
        
    - name: Run build process
      run: |
        python3 scripts/github_auto_publisher.py ${{ github.event.inputs.binary_name }}
        
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Auto-update WASM projects from source repository

        Generated by GitHub Actions
        Source: ${{ github.event.inputs.source_repo || 'unknownue/bevy_prototype_codex' }}@${{ github.event.inputs.source_ref || 'main' }}
        Timestamp: $(date -u)"
        git push
        
    - name: Summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Source Repository: ${{ github.event.inputs.source_repo || 'unknownue/bevy_prototype_codex' }}" >> $GITHUB_STEP_SUMMARY
        echo "- Source Reference: ${{ github.event.inputs.source_ref || 'main' }}" >> $GITHUB_STEP_SUMMARY
        echo "- Target Binary: ${{ github.event.inputs.binary_name || 'All binaries' }}" >> $GITHUB_STEP_SUMMARY
        echo "- Changes Detected: ${{ steps.verify-changed-files.outputs.changed }}" >> $GITHUB_STEP_SUMMARY
        echo "- Timestamp: $(date -u)" >> $GITHUB_STEP_SUMMARY 