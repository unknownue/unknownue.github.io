diff --git a/crates/bevy_gltf/src/loader/gltf_ext/mesh.rs b/crates/bevy_gltf/src/loader/gltf_ext/mesh.rs
index ef719891a4b33..60a153fed333a 100644
--- a/crates/bevy_gltf/src/loader/gltf_ext/mesh.rs
+++ b/crates/bevy_gltf/src/loader/gltf_ext/mesh.rs
@@ -1,13 +1,17 @@
 use bevy_mesh::PrimitiveTopology;
 
-use gltf::mesh::{Mesh, Mode, Primitive};
+use gltf::{
+    mesh::{Mesh, Mode},
+    Material,
+};
 
 use crate::GltfError;
 
-pub(crate) fn primitive_name(mesh: &Mesh<'_>, primitive: &Primitive) -> String {
+pub(crate) fn primitive_name(mesh: &Mesh<'_>, material: &Material) -> String {
     let mesh_name = mesh.name().unwrap_or("Mesh");
-    if mesh.primitives().len() > 1 {
-        format!("{}.{}", mesh_name, primitive.index())
+
+    if let Some(material_name) = material.name() {
+        format!("{}.{}", mesh_name, material_name)
     } else {
         mesh_name.to_string()
     }
diff --git a/crates/bevy_gltf/src/loader/mod.rs b/crates/bevy_gltf/src/loader/mod.rs
index f85a739b2e01f..b65e4bf81aee5 100644
--- a/crates/bevy_gltf/src/loader/mod.rs
+++ b/crates/bevy_gltf/src/loader/mod.rs
@@ -1464,10 +1464,11 @@ fn load_node(
                     }
 
                     if let Some(name) = material.name() {
-                        mesh_entity.insert(GltfMaterialName(String::from(name)));
+                        mesh_entity.insert(GltfMaterialName(name.to_string()));
                     }
 
-                    mesh_entity.insert(Name::new(primitive_name(&mesh, &primitive)));
+                    mesh_entity.insert(Name::new(primitive_name(&mesh, &material)));
+
                     // Mark for adding skinned mesh
                     if let Some(skin) = gltf_node.skin() {
                         entity_to_skin_index_map.insert(mesh_entity.id(), skin.index());
diff --git a/release-content/migration-guides/rename_spawn_gltf_material_name.md b/release-content/migration-guides/rename_spawn_gltf_material_name.md
new file mode 100644
index 0000000000000..630697b5fdc10
--- /dev/null
+++ b/release-content/migration-guides/rename_spawn_gltf_material_name.md
@@ -0,0 +1,9 @@
+---
+title: Use Gltf material names for spawned primitive entities
+authors: ["@rendaoer"]
+pull_requests: [19287]
+---
+
+When loading a Gltf scene in Bevy, each mesh primitive will generate an entity and store a `GltfMaterialName` component and `Name` component.
+
+The `Name` components were previously stored as mesh name plus primitive index - for example, `MeshName.0` and `MeshName.1`. To make it easier to view these entities in Inspector-style tools, they are now stored as mesh name plus material name - for example, `MeshName.Material1Name` and `MeshName.Material2Name`.
