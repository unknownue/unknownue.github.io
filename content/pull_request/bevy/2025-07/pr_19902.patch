diff --git a/crates/bevy_reflect/derive/src/impls/typed.rs b/crates/bevy_reflect/derive/src/impls/typed.rs
index da8254d149339..b158973a7b613 100644
--- a/crates/bevy_reflect/derive/src/impls/typed.rs
+++ b/crates/bevy_reflect/derive/src/impls/typed.rs
@@ -106,34 +106,27 @@ pub(crate) fn impl_type_path(meta: &ReflectMeta) -> TokenStream {
     quote! {
         #primitive_assert
 
-        // To ensure alloc is available, but also prevent its name from clashing, we place the implementation inside an anonymous constant
-        const _: () = {
-            extern crate alloc;
-
-            use alloc::string::ToString;
-
-            impl #impl_generics #bevy_reflect_path::TypePath for #type_path #ty_generics #where_reflect_clause {
-                fn type_path() -> &'static str {
-                    #long_type_path
-                }
+        impl #impl_generics #bevy_reflect_path::TypePath for #type_path #ty_generics #where_reflect_clause {
+            fn type_path() -> &'static str {
+                #long_type_path
+            }
 
-                fn short_type_path() -> &'static str {
-                    #short_type_path
-                }
+            fn short_type_path() -> &'static str {
+                #short_type_path
+            }
 
-                fn type_ident() -> Option<&'static str> {
-                    #type_ident
-                }
+            fn type_ident() -> Option<&'static str> {
+                #type_ident
+            }
 
-                fn crate_name() -> Option<&'static str> {
-                    #crate_name
-                }
+            fn crate_name() -> Option<&'static str> {
+                #crate_name
+            }
 
-                fn module_path() -> Option<&'static str> {
-                    #module_path
-                }
+            fn module_path() -> Option<&'static str> {
+                #module_path
             }
-        };
+        }
     }
 }
 
