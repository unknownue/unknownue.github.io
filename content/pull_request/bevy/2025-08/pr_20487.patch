diff --git a/examples/3d/anti_aliasing.rs b/examples/3d/anti_aliasing.rs
index fd93625c0e634..ba8711c9b4e9e 100644
--- a/examples/3d/anti_aliasing.rs
+++ b/examples/3d/anti_aliasing.rs
@@ -11,7 +11,7 @@ use bevy::{
     },
     core_pipeline::prepass::{DepthPrepass, MotionVectorPrepass},
     image::{ImageSampler, ImageSamplerDescriptor},
-    pbr::CascadeShadowConfigBuilder,
+    light::CascadeShadowConfigBuilder,
     prelude::*,
     render::{
         camera::{MipBias, TemporalJitter},
diff --git a/examples/3d/atmosphere.rs b/examples/3d/atmosphere.rs
index f80baefc08356..1ba2d8e9f908f 100644
--- a/examples/3d/atmosphere.rs
+++ b/examples/3d/atmosphere.rs
@@ -5,7 +5,8 @@ use std::f32::consts::PI;
 use bevy::{
     camera::Exposure,
     core_pipeline::{bloom::Bloom, tonemapping::Tonemapping},
-    pbr::{light_consts::lux, Atmosphere, AtmosphereSettings, CascadeShadowConfigBuilder},
+    light::{light_consts::lux, CascadeShadowConfigBuilder},
+    pbr::{Atmosphere, AtmosphereSettings},
     prelude::*,
 };
 
diff --git a/examples/3d/atmospheric_fog.rs b/examples/3d/atmospheric_fog.rs
index e24736cdd1644..06df19411f6c6 100644
--- a/examples/3d/atmospheric_fog.rs
+++ b/examples/3d/atmospheric_fog.rs
@@ -8,7 +8,7 @@
 //! | `S`                | Toggle Directional Light Fog Influence |
 
 use bevy::{
-    pbr::{CascadeShadowConfigBuilder, NotShadowCaster},
+    light::{CascadeShadowConfigBuilder, NotShadowCaster},
     prelude::*,
 };
 
diff --git a/examples/3d/color_grading.rs b/examples/3d/color_grading.rs
index 7a9971b5c2f8f..6d6ed6d38d28e 100644
--- a/examples/3d/color_grading.rs
+++ b/examples/3d/color_grading.rs
@@ -7,7 +7,7 @@ use std::{
 
 use bevy::{
     ecs::system::EntityCommands,
-    pbr::CascadeShadowConfigBuilder,
+    light::CascadeShadowConfigBuilder,
     prelude::*,
     render::view::{ColorGrading, ColorGradingGlobal, ColorGradingSection, Hdr},
 };
diff --git a/examples/3d/deferred_rendering.rs b/examples/3d/deferred_rendering.rs
index 6f51cff8c20ec..fcd2d3af5e6a1 100644
--- a/examples/3d/deferred_rendering.rs
+++ b/examples/3d/deferred_rendering.rs
@@ -6,11 +6,11 @@ use bevy::{
     anti_aliasing::fxaa::Fxaa,
     core_pipeline::prepass::{DeferredPrepass, DepthPrepass, MotionVectorPrepass, NormalPrepass},
     image::ImageLoaderSettings,
-    math::ops,
-    pbr::{
-        CascadeShadowConfigBuilder, DefaultOpaqueRendererMethod, DirectionalLightShadowMap,
-        NotShadowCaster, NotShadowReceiver, OpaqueRendererMethod,
+    light::{
+        CascadeShadowConfigBuilder, DirectionalLightShadowMap, NotShadowCaster, NotShadowReceiver,
     },
+    math::ops,
+    pbr::{DefaultOpaqueRendererMethod, OpaqueRendererMethod},
     prelude::*,
 };
 
diff --git a/examples/3d/edit_material_on_gltf.rs b/examples/3d/edit_material_on_gltf.rs
index 97c3c4829601d..f3aab3d4ccb45 100644
--- a/examples/3d/edit_material_on_gltf.rs
+++ b/examples/3d/edit_material_on_gltf.rs
@@ -6,8 +6,9 @@ use bevy::{
     audio::AudioPlugin,
     color::{palettes, Color},
     gltf::GltfAssetLabel,
+    light::DirectionalLight,
     math::{Dir3, Vec3},
-    pbr::{DirectionalLight, MeshMaterial3d, StandardMaterial},
+    pbr::{MeshMaterial3d, StandardMaterial},
     prelude::{Camera3d, Children, Commands, Component, On, Query, Res, ResMut, Transform},
     scene::{SceneInstanceReady, SceneRoot},
     DefaultPlugins,
diff --git a/examples/3d/fog.rs b/examples/3d/fog.rs
index f1fb3f1ed5169..d4e653368c627 100644
--- a/examples/3d/fog.rs
+++ b/examples/3d/fog.rs
@@ -22,8 +22,8 @@
 //! | `.` / `?`          | Adjust Fog Alpha Channel            |
 
 use bevy::{
+    light::{NotShadowCaster, NotShadowReceiver},
     math::ops,
-    pbr::{NotShadowCaster, NotShadowReceiver},
     prelude::*,
 };
 
diff --git a/examples/3d/fog_volumes.rs b/examples/3d/fog_volumes.rs
index 63804ee9dea82..2789644b2171a 100644
--- a/examples/3d/fog_volumes.rs
+++ b/examples/3d/fog_volumes.rs
@@ -6,8 +6,8 @@
 //! light.
 
 use bevy::{
+    light::{FogVolume, VolumetricFog, VolumetricLight},
     math::vec3,
-    pbr::{FogVolume, VolumetricFog, VolumetricLight},
     prelude::*,
     render::view::Hdr,
 };
diff --git a/examples/3d/irradiance_volumes.rs b/examples/3d/irradiance_volumes.rs
index 80373512db984..e0e3eb0906400 100644
--- a/examples/3d/irradiance_volumes.rs
+++ b/examples/3d/irradiance_volumes.rs
@@ -16,10 +16,9 @@
 use bevy::{
     color::palettes::css::*,
     core_pipeline::Skybox,
+    light::{IrradianceVolume, NotShadowCaster},
     math::{uvec3, vec3},
-    pbr::{
-        irradiance_volume::IrradianceVolume, ExtendedMaterial, MaterialExtension, NotShadowCaster,
-    },
+    pbr::{ExtendedMaterial, MaterialExtension},
     prelude::*,
     render::render_resource::{AsBindGroup, ShaderRef, ShaderType},
     window::PrimaryWindow,
diff --git a/examples/3d/light_textures.rs b/examples/3d/light_textures.rs
index f035a72427eca..acabd2ca1d138 100644
--- a/examples/3d/light_textures.rs
+++ b/examples/3d/light_textures.rs
@@ -7,7 +7,8 @@ use bevy::{
     camera::primitives::CubemapLayout,
     color::palettes::css::{SILVER, YELLOW},
     input::mouse::AccumulatedMouseMotion,
-    pbr::{decal, DirectionalLightTexture, NotShadowCaster, PointLightTexture, SpotLightTexture},
+    light::{DirectionalLightTexture, NotShadowCaster, PointLightTexture, SpotLightTexture},
+    pbr::decal,
     prelude::*,
     render::renderer::{RenderAdapter, RenderDevice},
     window::{CursorIcon, SystemCursorIcon},
diff --git a/examples/3d/lighting.rs b/examples/3d/lighting.rs
index 46e25ee24e337..47c518cbf2fff 100644
--- a/examples/3d/lighting.rs
+++ b/examples/3d/lighting.rs
@@ -6,7 +6,7 @@ use std::f32::consts::PI;
 use bevy::{
     camera::{Exposure, PhysicalCameraParameters},
     color::palettes::css::*,
-    pbr::CascadeShadowConfigBuilder,
+    light::CascadeShadowConfigBuilder,
     prelude::*,
 };
 
diff --git a/examples/3d/load_gltf.rs b/examples/3d/load_gltf.rs
index ac82e24f09fc0..827bd5d695ba2 100644
--- a/examples/3d/load_gltf.rs
+++ b/examples/3d/load_gltf.rs
@@ -1,7 +1,7 @@
 //! Loads and renders a glTF file as a scene.
 
 use bevy::{
-    pbr::{CascadeShadowConfigBuilder, DirectionalLightShadowMap},
+    light::{CascadeShadowConfigBuilder, DirectionalLightShadowMap},
     prelude::*,
 };
 use std::f32::consts::*;
diff --git a/examples/3d/meshlet.rs b/examples/3d/meshlet.rs
index 8cab04ae99dd3..633e2090d95a6 100644
--- a/examples/3d/meshlet.rs
+++ b/examples/3d/meshlet.rs
@@ -6,10 +6,8 @@
 mod camera_controller;
 
 use bevy::{
-    pbr::{
-        experimental::meshlet::{MeshletMesh3d, MeshletPlugin},
-        CascadeShadowConfigBuilder, DirectionalLightShadowMap,
-    },
+    light::{CascadeShadowConfigBuilder, DirectionalLightShadowMap},
+    pbr::experimental::meshlet::{MeshletMesh3d, MeshletPlugin},
     prelude::*,
     render::render_resource::AsBindGroup,
 };
diff --git a/examples/3d/pcss.rs b/examples/3d/pcss.rs
index fabee57a49f76..fec0ff7fe72af 100644
--- a/examples/3d/pcss.rs
+++ b/examples/3d/pcss.rs
@@ -12,8 +12,8 @@ use bevy::{
         prepass::{DepthPrepass, MotionVectorPrepass},
         Skybox,
     },
+    light::ShadowFilteringMethod,
     math::vec3,
-    pbr::ShadowFilteringMethod,
     prelude::*,
     render::camera::TemporalJitter,
 };
diff --git a/examples/3d/post_processing.rs b/examples/3d/post_processing.rs
index e539d94b3093c..da786e812278e 100644
--- a/examples/3d/post_processing.rs
+++ b/examples/3d/post_processing.rs
@@ -5,8 +5,8 @@
 use std::f32::consts::PI;
 
 use bevy::{
-    core_pipeline::post_process::ChromaticAberration, pbr::CascadeShadowConfigBuilder, prelude::*,
-    render::view::Hdr,
+    core_pipeline::post_process::ChromaticAberration, light::CascadeShadowConfigBuilder,
+    prelude::*, render::view::Hdr,
 };
 
 /// The number of units per frame to add to or subtract from intensity when the
diff --git a/examples/3d/scrolling_fog.rs b/examples/3d/scrolling_fog.rs
index 7ec53e1fadc38..5169eea6980f0 100644
--- a/examples/3d/scrolling_fog.rs
+++ b/examples/3d/scrolling_fog.rs
@@ -17,7 +17,7 @@ use bevy::{
         ImageAddressMode, ImageFilterMode, ImageLoaderSettings, ImageSampler,
         ImageSamplerDescriptor,
     },
-    pbr::{DirectionalLightShadowMap, FogVolume, VolumetricFog, VolumetricLight},
+    light::{DirectionalLightShadowMap, FogVolume, VolumetricFog, VolumetricLight},
     prelude::*,
 };
 
diff --git a/examples/3d/shadow_biases.rs b/examples/3d/shadow_biases.rs
index 2a356c7513b94..27941b5d43f1a 100644
--- a/examples/3d/shadow_biases.rs
+++ b/examples/3d/shadow_biases.rs
@@ -3,7 +3,7 @@
 #[path = "../helpers/camera_controller.rs"]
 mod camera_controller;
 
-use bevy::{pbr::ShadowFilteringMethod, prelude::*};
+use bevy::{light::ShadowFilteringMethod, prelude::*};
 use camera_controller::{CameraController, CameraControllerPlugin};
 
 fn main() {
diff --git a/examples/3d/shadow_caster_receiver.rs b/examples/3d/shadow_caster_receiver.rs
index edc8631aa9abe..fa1984086426a 100644
--- a/examples/3d/shadow_caster_receiver.rs
+++ b/examples/3d/shadow_caster_receiver.rs
@@ -4,7 +4,7 @@ use std::f32::consts::PI;
 
 use bevy::{
     color::palettes::basic::{BLUE, LIME, RED},
-    pbr::{CascadeShadowConfigBuilder, NotShadowCaster, NotShadowReceiver},
+    light::{CascadeShadowConfigBuilder, NotShadowCaster, NotShadowReceiver},
     prelude::*,
 };
 
diff --git a/examples/3d/split_screen.rs b/examples/3d/split_screen.rs
index 456bb316ed4ec..0613da825eff6 100644
--- a/examples/3d/split_screen.rs
+++ b/examples/3d/split_screen.rs
@@ -2,7 +2,9 @@
 
 use std::f32::consts::PI;
 
-use bevy::{camera::Viewport, pbr::CascadeShadowConfigBuilder, prelude::*, window::WindowResized};
+use bevy::{
+    camera::Viewport, light::CascadeShadowConfigBuilder, prelude::*, window::WindowResized,
+};
 
 fn main() {
     App::new()
diff --git a/examples/3d/spotlight.rs b/examples/3d/spotlight.rs
index 863c07b15b27c..b9c99512adcd8 100644
--- a/examples/3d/spotlight.rs
+++ b/examples/3d/spotlight.rs
@@ -4,8 +4,8 @@ use std::f32::consts::*;
 
 use bevy::{
     color::palettes::basic::{MAROON, RED},
+    light::NotShadowCaster,
     math::ops,
-    pbr::NotShadowCaster,
     prelude::*,
     render::view::Hdr,
 };
diff --git a/examples/3d/tonemapping.rs b/examples/3d/tonemapping.rs
index 987ceda70da70..093ca84e495ab 100644
--- a/examples/3d/tonemapping.rs
+++ b/examples/3d/tonemapping.rs
@@ -3,7 +3,7 @@
 use bevy::{
     asset::UnapprovedPathMode,
     core_pipeline::tonemapping::Tonemapping,
-    pbr::CascadeShadowConfigBuilder,
+    light::CascadeShadowConfigBuilder,
     platform::collections::HashMap,
     prelude::*,
     reflect::TypePath,
diff --git a/examples/3d/transmission.rs b/examples/3d/transmission.rs
index 65f37d93079aa..f02c26f976999 100644
--- a/examples/3d/transmission.rs
+++ b/examples/3d/transmission.rs
@@ -24,8 +24,8 @@ use bevy::{
     camera::{Exposure, ScreenSpaceTransmissionQuality},
     color::palettes::css::*,
     core_pipeline::{bloom::Bloom, prepass::DepthPrepass, tonemapping::Tonemapping},
+    light::{NotShadowCaster, PointLightShadowMap, TransmittedShadowReceiver},
     math::ops,
-    pbr::{NotShadowCaster, PointLightShadowMap, TransmittedShadowReceiver},
     prelude::*,
     render::{
         camera::TemporalJitter,
diff --git a/examples/3d/update_gltf_scene.rs b/examples/3d/update_gltf_scene.rs
index 651fc038761fd..f29b68944f336 100644
--- a/examples/3d/update_gltf_scene.rs
+++ b/examples/3d/update_gltf_scene.rs
@@ -1,7 +1,7 @@
 //! Update a scene from a glTF file, either by spawning the scene as a child of another entity,
 //! or by accessing the entities of the scene.
 
-use bevy::{pbr::DirectionalLightShadowMap, prelude::*};
+use bevy::{light::DirectionalLightShadowMap, prelude::*};
 
 fn main() {
     App::new()
diff --git a/examples/3d/visibility_range.rs b/examples/3d/visibility_range.rs
index 829cccd769d64..0130bcf482558 100644
--- a/examples/3d/visibility_range.rs
+++ b/examples/3d/visibility_range.rs
@@ -6,8 +6,8 @@ use bevy::{
     camera::visibility::VisibilityRange,
     core_pipeline::prepass::{DepthPrepass, NormalPrepass},
     input::mouse::MouseWheel,
+    light::{light_consts::lux::FULL_DAYLIGHT, CascadeShadowConfigBuilder},
     math::vec3,
-    pbr::{light_consts::lux::FULL_DAYLIGHT, CascadeShadowConfigBuilder},
     prelude::*,
 };
 
diff --git a/examples/3d/volumetric_fog.rs b/examples/3d/volumetric_fog.rs
index 1d13e333c9d31..c0df929503720 100644
--- a/examples/3d/volumetric_fog.rs
+++ b/examples/3d/volumetric_fog.rs
@@ -3,8 +3,8 @@
 use bevy::{
     color::palettes::css::RED,
     core_pipeline::{bloom::Bloom, tonemapping::Tonemapping, Skybox},
+    light::{FogVolume, VolumetricFog, VolumetricLight},
     math::vec3,
-    pbr::{FogVolume, VolumetricFog, VolumetricLight},
     prelude::*,
 };
 
diff --git a/examples/animation/animated_mesh.rs b/examples/animation/animated_mesh.rs
index 06e6c45a58b47..cf1320115a4cf 100644
--- a/examples/animation/animated_mesh.rs
+++ b/examples/animation/animated_mesh.rs
@@ -2,7 +2,7 @@
 
 use std::f32::consts::PI;
 
-use bevy::{pbr::CascadeShadowConfigBuilder, prelude::*, scene::SceneInstanceReady};
+use bevy::{light::CascadeShadowConfigBuilder, prelude::*, scene::SceneInstanceReady};
 
 // An example asset that contains a mesh and animation.
 const GLTF_PATH: &str = "models/animated/Fox.glb";
diff --git a/examples/animation/animated_mesh_control.rs b/examples/animation/animated_mesh_control.rs
index 0dafd0de11892..46bf23ddc5cea 100644
--- a/examples/animation/animated_mesh_control.rs
+++ b/examples/animation/animated_mesh_control.rs
@@ -2,7 +2,7 @@
 
 use std::{f32::consts::PI, time::Duration};
 
-use bevy::{animation::RepeatAnimation, pbr::CascadeShadowConfigBuilder, prelude::*};
+use bevy::{animation::RepeatAnimation, light::CascadeShadowConfigBuilder, prelude::*};
 
 const FOX_PATH: &str = "models/animated/Fox.glb";
 
diff --git a/examples/animation/animated_mesh_events.rs b/examples/animation/animated_mesh_events.rs
index 95b71efc7fe2e..6682f2e374349 100644
--- a/examples/animation/animated_mesh_events.rs
+++ b/examples/animation/animated_mesh_events.rs
@@ -3,7 +3,7 @@
 use std::{f32::consts::PI, time::Duration};
 
 use bevy::{
-    animation::AnimationTargetId, color::palettes::css::WHITE, pbr::CascadeShadowConfigBuilder,
+    animation::AnimationTargetId, color::palettes::css::WHITE, light::CascadeShadowConfigBuilder,
     prelude::*,
 };
 use rand::{Rng, SeedableRng};
diff --git a/examples/camera/first_person_view_model.rs b/examples/camera/first_person_view_model.rs
index f0867808f0219..86e67faa3e623 100644
--- a/examples/camera/first_person_view_model.rs
+++ b/examples/camera/first_person_view_model.rs
@@ -46,7 +46,7 @@ use std::f32::consts::FRAC_PI_2;
 
 use bevy::{
     camera::visibility::RenderLayers, color::palettes::tailwind,
-    input::mouse::AccumulatedMouseMotion, pbr::NotShadowCaster, prelude::*,
+    input::mouse::AccumulatedMouseMotion, light::NotShadowCaster, prelude::*,
 };
 
 fn main() {
diff --git a/examples/shader/shader_prepass.rs b/examples/shader/shader_prepass.rs
index 00059a35e084b..7547df607684b 100644
--- a/examples/shader/shader_prepass.rs
+++ b/examples/shader/shader_prepass.rs
@@ -4,7 +4,8 @@
 
 use bevy::{
     core_pipeline::prepass::{DepthPrepass, MotionVectorPrepass, NormalPrepass},
-    pbr::{NotShadowCaster, PbrPlugin},
+    light::NotShadowCaster,
+    pbr::PbrPlugin,
     prelude::*,
     reflect::TypePath,
     render::render_resource::{AsBindGroup, ShaderRef, ShaderType},
diff --git a/examples/stress_tests/many_cubes.rs b/examples/stress_tests/many_cubes.rs
index 899d99089daf0..5f27fd6e2ad38 100644
--- a/examples/stress_tests/many_cubes.rs
+++ b/examples/stress_tests/many_cubes.rs
@@ -14,8 +14,8 @@ use argh::FromArgs;
 use bevy::{
     camera::visibility::{NoCpuCulling, NoFrustumCulling},
     diagnostic::{FrameTimeDiagnosticsPlugin, LogDiagnosticsPlugin},
+    light::NotShadowCaster,
     math::{DVec2, DVec3},
-    pbr::NotShadowCaster,
     prelude::*,
     render::{
         batching::NoAutomaticBatching,
diff --git a/examples/stress_tests/many_foxes.rs b/examples/stress_tests/many_foxes.rs
index c1284c9bd6c1f..50a4887f41024 100644
--- a/examples/stress_tests/many_foxes.rs
+++ b/examples/stress_tests/many_foxes.rs
@@ -6,7 +6,7 @@ use std::{f32::consts::PI, time::Duration};
 use argh::FromArgs;
 use bevy::{
     diagnostic::{FrameTimeDiagnosticsPlugin, LogDiagnosticsPlugin},
-    pbr::CascadeShadowConfigBuilder,
+    light::CascadeShadowConfigBuilder,
     prelude::*,
     window::{PresentMode, WindowResolution},
     winit::{UpdateMode, WinitSettings},
