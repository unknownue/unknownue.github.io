diff --git a/crates/bevy_state/src/lib.rs b/crates/bevy_state/src/lib.rs
index 1ca9f01bffeb7..2b2874a2c44fa 100644
--- a/crates/bevy_state/src/lib.rs
+++ b/crates/bevy_state/src/lib.rs
@@ -82,6 +82,13 @@ pub mod prelude {
     #[doc(hidden)]
     pub use crate::reflect::{ReflectFreelyMutableState, ReflectState};
 
+    #[doc(hidden)]
+    #[expect(
+        deprecated,
+        reason = "Temporarily re-exporting deprecated type for transition"
+    )]
+    pub use crate::state_scoped::StateScoped;
+
     #[doc(hidden)]
     pub use crate::{
         commands::CommandsStatesExt,
diff --git a/crates/bevy_state/src/state_scoped.rs b/crates/bevy_state/src/state_scoped.rs
index 51c1817224915..a7d47b050861b 100644
--- a/crates/bevy_state/src/state_scoped.rs
+++ b/crates/bevy_state/src/state_scoped.rs
@@ -63,6 +63,10 @@ where
     }
 }
 
+/// A deprecated alias for [`DespawnOnExit`].
+#[deprecated(since = "0.17.0", note = "use DespawnOnExit instead")]
+pub type StateScoped<S> = DespawnOnExit<S>;
+
 /// Despawns entities marked with [`DespawnOnExit<S>`] when their state no
 /// longer matches the world state.
 pub fn despawn_entities_on_exit_state<S: States>(
