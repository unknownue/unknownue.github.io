diff --git a/content/posts/markdown-syntax-test.md b/content/posts/markdown-syntax-test.md
index abcdef1..1234567 100644
--- a/content/posts/markdown-syntax-test.md
+++ b/content/posts/markdown-syntax-test.md
@@ -1,6 +1,6 @@
 +++
 title = "Markdown Syntax Test"
-date = "2023-01-01T12:00:00"
+date = "2023-01-01T12:30:00"
 description = "This article tests Zola's support for various Markdown syntax features"
 +++
 
@@ -10,6 +10,8 @@ This article is used to test Zola's support for various Markdown syntax features.
 
 ## 1. Basic Text Formatting
 
+### 1.1 Paragraphs and Line Breaks
+
 This is the first paragraph.
 
 This is the second paragraph, with an empty line between it and the first paragraph.
@@ -17,6 +19,8 @@ This is the second paragraph, with an empty line between it and the first paragra
 This line ends with two spaces,  
 so this text should display on a new line.
 
+### 1.2 Emphasis
+
 *This is italic text*
 _This is also italic text_
 
@@ -59,11 +63,101 @@ This is text containing `inline code`.
 without specifying a language
 ```
 
+Here is a new paragraph explaining code blocks.
 ```rust
 // This is a Rust code block
 fn main() {
     println!("Hello, world!");
+    
+    // Additional code added
+    let x = 42;
+    println!("The answer is: {}", x);
 }
 ```
+
+## 4. New Content Section
+
+### 4.1 Advanced Formatting
+
+You can create keyboard shortcuts like <kbd>Ctrl</kbd> + <kbd>C</kbd> for copy.
+
+Here's some ==highlighted text== that stands out.
+
+### 4.2 Mathematical Formulas
+
+Inline math: $E = mc^2$
+
+Block math:
+
+$$
+\begin{aligned}
+\nabla \times \vec{\mathbf{B}} -\, \frac1c\, \frac{\partial\vec{\mathbf{E}}}{\partial t} & = \frac{4\pi}{c}\vec{\mathbf{j}} \\
+\nabla \cdot \vec{\mathbf{E}} & = 4 \pi \rho \\
+\end{aligned}
+$$
+
+diff --git a/templates/page.html b/templates/page.html
index 98765432..12345678 100644
--- a/templates/page.html
+++ b/templates/page.html
@@ -10,7 +10,7 @@
     <div class="content">
         <h1 class="title">
             {{ page.title }}
-            <span class="date">{{ page.date | date(format="%Y-%m-%d") }}</span>
+            <span class="date">{{ page.date | date(format="%B %d, %Y") }}</span>
         </h1>
         
         <div class="page-content">
@@ -20,6 +20,14 @@
             {{ page.content | safe }}
         </div>
         
+        {% if page.taxonomies.tags %}
+        <div class="post-tags">
+            <h3>Tags:</h3>
+            {% for tag in page.taxonomies.tags %}
+            <a href="{{ get_taxonomy_url(kind="tags", name=tag) }}" class="tag">{{ tag }}</a>
+            {% endfor %}
+        </div>
+        {% endif %}
     </div>
 </article>
 {% endblock content %}

diff --git a/static/js/main.js b/static/js/main.js
new file mode 100644
index 0000000000..e975d95d
--- /dev/null
+++ b/static/js/main.js
@@ -0,0 +1,44 @@
+// Main JavaScript file for blog functionality
+document.addEventListener('DOMContentLoaded', function() {
+    console.log('Document loaded. Initializing...');
+    
+    // Initialize code highlighting
+    if (typeof hljs !== 'undefined') {
+        hljs.highlightAll();
+        console.log('Code highlighting initialized');
+    }
+    
+    // Add copy button to code blocks
+    addCopyButtonsToCodeBlocks();
+    
+    // Initialize table of contents if available
+    initTableOfContents();
+});
+
+function addCopyButtonsToCodeBlocks() {
+    const codeBlocks = document.querySelectorAll('pre code');
+    codeBlocks.forEach((codeBlock, index) => {
+        const button = document.createElement('button');
+        button.className = 'copy-button';
+        button.textContent = 'Copy';
+        button.setAttribute('aria-label', 'Copy code to clipboard');
+        
+        const pre = codeBlock.parentNode;
+        pre.style.position = 'relative';
+        pre.appendChild(button);
+        
+        button.addEventListener('click', () => {
+            navigator.clipboard.writeText(codeBlock.textContent)
+                .then(() => {
+                    button.textContent = 'Copied!';
+                    setTimeout(() => { button.textContent = 'Copy'; }, 2000);
+                });
+        });
+    });
+}
+
+function initTableOfContents() {
+    const tocContainer = document.getElementById('table-of-contents');
+    if (!tocContainer) return;
+    
+    // Logic to generate table of contents from headings
+}
\ No newline at end of file

diff --git a/sass/_variables.scss b/sass/_variables.scss
index abcde123..98765432 100644
--- a/sass/_variables.scss
+++ b/sass/_variables.scss
@@ -3,15 +3,28 @@
 // Light theme colors
 $light-background: #ffffff;
 $light-text: #333333;
-$light-text-secondary: #666666;
+$light-text-secondary: #555555;
 $light-border: #e6e6e6;
-$light-highlight: #f5f5f5;
+$light-highlight: #f7f7f7;
 $light-link: #0366d6;
-$light-link-hover: #0256b9;
+$light-link-hover: #0076ff;
+$light-code-bg: #f8f8f8;
+$light-blockquote-border: #e0e0e0;
+$light-tag-bg: #eef4fa;
+$light-tag-text: #0366d6;
 
 // Dark theme colors
 $dark-background: #1e1e1e;
 $dark-text: #e0e0e0;
-$dark-text-secondary: #aaaaaa;
+$dark-text-secondary: #b0b0b0;
 $dark-border: #444444;
-$dark-highlight: #2d2d2d;
+$dark-highlight: #2a2a2a;
+$dark-link: #58a6ff;
+$dark-link-hover: #79b8ff;
+$dark-code-bg: #2d2d2d;
+$dark-blockquote-border: #505050;
+$dark-tag-bg: #2a3548;
+$dark-tag-text: #58a6ff;
+
+// Responsive breakpoints
+$mobile-breakpoint: 768px;
+$tablet-breakpoint: 1024px;
 </rewritten_file> 